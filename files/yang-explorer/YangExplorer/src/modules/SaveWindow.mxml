<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright 2015, Cisco Systems, Inc
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    
    @author: Pravin Gohite, Cisco Systems, Inc.
-->
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:mx="library://ns.adobe.com/flex/mx" 
               xmlns:s="library://ns.adobe.com/flex/spark"
               width="400"
               close="handleClose();" title="Add to collection"
               skinClass="flatspark.skins.TitleWindowSkin" xmlns:components="flatspark.components.*">
    <s:layout>
        <s:VerticalLayout/>
    </s:layout>
    
    <fx:Declarations>
        <s:HTTPService id="saveService" resultFormat="e4x"
                       result="saveService_resultHandler(event)"
                       fault="saveService_faultHandler(event)" showBusyCursor="true"
                       />
        <mx:StringValidator id="valStr" 
                            source="{txtName}" property="text" 
                            minLength="1" maxLength="32"
                            />
    </fx:Declarations>
    <fx:Script>
        <![CDATA[
            import mx.managers.PopUpManager;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;
            
            import spark.components.Alert;
            
            import classes.Response;
            
            import flatspark.enums.BrandColorEnum;
            import flatspark.enums.ButtonSizeEnum;
            
            // Handle the close button and Cancel button.
            private function handleClose():void {
                PopUpManager.removePopUp(this);
            }            
            
            // Handle the Upload button.
            private function handleSubmit():void {
                
                var req_xml: XML = parentApplication.getRequestPayload(false)
                
                if (req_xml == null) {
                    Alert.show('Empty Test Case Data', 'Error')
                    PopUpManager.removePopUp(this);
                    return;
                }

                var str:String = txtName.text
                str = str.replace(/^\s+|\s+$/g, '');
                if (str.length < 2) {
                    Alert.show('Invalid testcase name!!', 'Input Error')
                    return;
                }
                
                var test_str:String = '<?xml version="1.0" encoding="UTF-8"?>\n'
                test_str += '<metadata>'
                test_str += '<collection>' + cbCollection.selectedItem +  '</collection>'
                test_str += '<author>' + txtOwner.text +  '</author>'
                test_str += '<name>' + str +  '</name>'
                test_str += '<desc>' + txtDesc.text +  '</desc>'
                test_str += '</metadata>'
                
                var test_xml : XML = new XML(test_str)
                saveService.url = parentApplication.NC_URL
                saveService.send({payload:req_xml,
                                  metadata:test_xml,
                                  mode:'add-collection'})
            }
            
            protected function saveService_resultHandler(event:ResultEvent):void
            {
                var response : Response = new Response(event.result as XML);
                if (!response.errored) {
                    parentApplication.refresh_collectionArea();
                    PopUpManager.removePopUp(this);
                } else {
                    Alert.show('Something went wrong, Failed to Save', 'Error');
                }
            }
            
            protected function saveService_faultHandler(event:FaultEvent):void
            {
                Alert.show(event.fault.faultDetail, event.fault.faultString)
            }
        ]]>
    </fx:Script>
    
    <s:Form defaultButton="{btnSubmit}" fontFamily="Avenir">
        <s:layout>
            <s:FormLayout gap="-5"/>
        </s:layout> 
        <s:FormItem label="Collection" required="true">
            <s:ComboBox id="cbCollection" width="150" skinClass="flatspark.skins.ComboBoxSkin"/>
        </s:FormItem>
        <s:FormItem label="Owner" toolTip="Author user ID" required="true">
            <components:TextInputIcon id="txtOwner" width="150"/>
        </s:FormItem> 
        <s:FormItem label="Name" required="true"
                    toolTip="Provie a name. Whitespace and special characters are not allowed.">
            <components:TextInputIcon id="txtName" width="250"/>
        </s:FormItem>
        <s:FormItem label="Description">
            <s:TextArea id="txtDesc"  width="250"/>
        </s:FormItem> 
        <s:FormItem>
            <s:HGroup  width="100%" direction="rtl">
                <components:ButtonIcon id="btnSubmit" label="Submit"
                                       click="handleSubmit()"
                                       width="100"
                                       height="{ButtonSizeEnum.Small}"
                                       brand="{BrandColorEnum.Primary}"/>
            </s:HGroup>
        </s:FormItem> 
    </s:Form>
</s:TitleWindow>