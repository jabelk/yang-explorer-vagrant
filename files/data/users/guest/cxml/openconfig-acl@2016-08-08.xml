<node name="openconfig-acl" prefix="oc-acl" type="module"><namespace import="false" module="openconfig-packet-match-types" prefix="oc-pkt-match-types">http://openconfig.net/yang/packet-match-types</namespace><namespace import="false" module="ietf-interfaces" prefix="if">urn:ietf:params:xml:ns:yang:ietf-interfaces</namespace><namespace import="false" module="ietf-inet-types" prefix="inet">urn:ietf:params:xml:ns:yang:ietf-inet-types</namespace><namespace import="true" module="openconfig-interfaces" prefix="oc-if">http://openconfig.net/yang/interfaces</namespace><namespace import="false" module="openconfig-acl" prefix="oc-acl">http://openconfig.net/yang/acl</namespace><namespace import="true" module="openconfig-extensions" prefix="oc-ext">http://openconfig.net/yang/openconfig-ext</namespace><namespace import="true" module="ietf-yang-types" prefix="yang">urn:ietf:params:xml:ns:yang:ietf-yang-types</namespace><namespace import="true" module="openconfig-packet-match" prefix="oc-match">http://openconfig.net/yang/header-fields</namespace><node access="read-write" name="acl" type="container"><description><![CDATA[Top level enclosing container for ACL model config
and operational state data]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Global config data for ACLs]]>None</description></node><node access="read-only" name="state" type="container"><description><![CDATA[Global operational state data for ACLs]]>None</description><node access="read-only" datatype="identityref:ACL_COUNTER_CAPABILITY" name="counter-capability" type="leaf" values="oc-acl:AGGREGATE_ONLY|oc-acl:INTERFACE_AGGREGATE|oc-acl:INTERFACE_ONLY"><description><![CDATA[System reported indication of how ACL counters are reported
by the target]]>None</description></node></node><node access="read-write" name="acl-sets" type="container"><description><![CDATA[Access list entries variables enclosing container]]>None</description><node access="read-write" key="name" name="acl-set" type="list"><description><![CDATA[List of ACL sets, each comprising of a list of ACL
entries]]>None</description><node access="read-write" datatype="-&gt; ../config/name" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[Reference to the name list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Access list config]]>None</description><node access="read-write" datatype="string" name="name" type="leaf"><description><![CDATA[The name of the access-list set]]>None</description></node><node access="read-write" datatype="string" name="description" type="leaf"><description><![CDATA[Description, or comment, for the ACL set]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Access list state information]]>None</description><node access="read-only" datatype="string" name="name" type="leaf"><description><![CDATA[The name of the access-list set]]>None</description></node><node access="read-only" datatype="string" name="description" type="leaf"><description><![CDATA[Description, or comment, for the ACL set]]>None</description></node></node><node access="read-write" name="acl-entries" type="container"><description><![CDATA[Access list entries container]]>None</description><node access="read-write" key="sequence-id" name="acl-entry" type="list"><description><![CDATA[List of ACL entries comprising an ACL set]]>None</description><node access="read-write" datatype="-&gt; ../config/sequence-id" is_key="true" mandatory="true" name="sequence-id" type="leaf"><description><![CDATA[references the list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Access list entries config]]>None</description><node access="read-write" datatype="uint32" name="sequence-id" type="leaf"><description><![CDATA[The sequence id determines the order in which ACL entries
are applied.  The sequence id must be unique for each entry
in an ACL set.  Target devices should apply the ACL entry
rules in the order determined by sequence id, rather than
the relying only on order in the list.]]>None</description></node><node access="read-write" datatype="string" name="description" type="leaf"><description><![CDATA[A user-defined description, or comment, for this Access List
Entry.]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[State information for ACL entries]]>None</description><node access="read-only" datatype="uint32" name="sequence-id" type="leaf"><description><![CDATA[The sequence id determines the order in which ACL entries
are applied.  The sequence id must be unique for each entry
in an ACL set.  Target devices should apply the ACL entry
rules in the order determined by sequence id, rather than
the relying only on order in the list.]]>None</description></node><node access="read-only" datatype="string" name="description" type="leaf"><description><![CDATA[A user-defined description, or comment, for this Access List
Entry.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="matched-packets" type="leaf"><description><![CDATA[Count of the number of packets matching the current ACL
entry.

An implementation should provide this counter on a
per-interface per-ACL-entry if possible.

If an implementation only supports ACL counters per entry
(i.e., not broken out per interface), then the value
should be equal to the aggregate count across all interfaces.

An implementation that provides counters per entry per
interface is not required to also provide an aggregate count,
e.g., per entry -- the user is expected to be able implement
the required aggregation if such a count is needed.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="matched-octets" type="leaf"><description><![CDATA[Count of the number of octets (bytes) matching the current
ACL entry.

An implementation should provide this counter on a
per-interface per-ACL-entry if possible.

If an implementation only supports ACL counters per entry
(i.e., not broken out per interface), then the value
should be equal to the aggregate count across all interfaces.

An implementation that provides counters per entry per
interface is not required to also provide an aggregate count,
e.g., per entry -- the user is expected to be able implement
the required aggregation if such a count is needed.]]>None</description></node></node><node access="read-write" name="l2" type="container"><description><![CDATA[Ethernet header fields]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data]]>None</description><node access="read-write" datatype="yang:mac-address" name="source-mac" type="leaf"><description><![CDATA[Source IEEE 802 MAC address.]]>None</description></node><node access="read-write" datatype="yang:mac-address" name="source-mac-mask" type="leaf"><description><![CDATA[Source IEEE 802 MAC address mask.]]>None</description></node><node access="read-write" datatype="yang:mac-address" name="destination-mac" type="leaf"><description><![CDATA[Destination IEEE 802 MAC address.]]>None</description></node><node access="read-write" datatype="yang:mac-address" name="destination-mac-mask" type="leaf"><description><![CDATA[Destination IEEE 802 MAC address mask.]]>None</description></node><node access="read-write" datatype="oc-pkt-match-types:ethertype-type" name="ethertype" type="leaf"><description><![CDATA[Ethertype field to match in Ethernet packets]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[State Information.]]>None</description><node access="read-only" datatype="yang:mac-address" name="source-mac" type="leaf"><description><![CDATA[Source IEEE 802 MAC address.]]>None</description></node><node access="read-only" datatype="yang:mac-address" name="source-mac-mask" type="leaf"><description><![CDATA[Source IEEE 802 MAC address mask.]]>None</description></node><node access="read-only" datatype="yang:mac-address" name="destination-mac" type="leaf"><description><![CDATA[Destination IEEE 802 MAC address.]]>None</description></node><node access="read-only" datatype="yang:mac-address" name="destination-mac-mask" type="leaf"><description><![CDATA[Destination IEEE 802 MAC address mask.]]>None</description></node><node access="read-only" datatype="oc-pkt-match-types:ethertype-type" name="ethertype" type="leaf"><description><![CDATA[Ethertype field to match in Ethernet packets]]>None</description></node></node></node><node access="read-write" name="ip" type="container"><description><![CDATA[Top level container]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data]]>None</description><node access="read-write" datatype="inet:ip-version" name="ip-version" type="leaf" values="unknown|ipv4|ipv6"><description><![CDATA[IP version of the header.]]>None</description></node><node access="read-write" datatype="inet:ip-prefix" name="source-ip-address" type="leaf"><description><![CDATA[Destination IP address prefix.]]>None</description></node><node access="read-write" datatype="inet:ipv6-flow-label" name="source-ip-flow-label" type="leaf"><description><![CDATA[Source IPv6 Flow label.]]>None</description></node><node access="read-write" datatype="inet:ip-prefix" name="destination-ip-address" type="leaf"><description><![CDATA[Destination IP address prefix.]]>None</description></node><node access="read-write" datatype="inet:ipv6-flow-label" name="destination-ip-flow-label" type="leaf"><description><![CDATA[Destination IPv6 Flow label.]]>None</description></node><node access="read-write" datatype="inet:dscp" name="dscp" type="leaf"><description><![CDATA[Value of diffserv codepoint.]]>None</description></node><node access="read-write" datatype="oc-pkt-match-types:ip-protocol-type" name="protocol" type="leaf"><description><![CDATA[Internet Protocol number.]]>None</description></node><node access="read-write" datatype="uint8" name="hop-limit" type="leaf"><description><![CDATA[The IP packet's hop limit -- known as TTL (in hops) in
IPv4 packets, and hop limit in IPv6]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[State information]]>None</description><node access="read-only" datatype="inet:ip-version" name="ip-version" type="leaf" values="unknown|ipv4|ipv6"><description><![CDATA[IP version of the header.]]>None</description></node><node access="read-only" datatype="inet:ip-prefix" name="source-ip-address" type="leaf"><description><![CDATA[Destination IP address prefix.]]>None</description></node><node access="read-only" datatype="inet:ipv6-flow-label" name="source-ip-flow-label" type="leaf"><description><![CDATA[Source IPv6 Flow label.]]>None</description></node><node access="read-only" datatype="inet:ip-prefix" name="destination-ip-address" type="leaf"><description><![CDATA[Destination IP address prefix.]]>None</description></node><node access="read-only" datatype="inet:ipv6-flow-label" name="destination-ip-flow-label" type="leaf"><description><![CDATA[Destination IPv6 Flow label.]]>None</description></node><node access="read-only" datatype="inet:dscp" name="dscp" type="leaf"><description><![CDATA[Value of diffserv codepoint.]]>None</description></node><node access="read-only" datatype="oc-pkt-match-types:ip-protocol-type" name="protocol" type="leaf"><description><![CDATA[Internet Protocol number.]]>None</description></node><node access="read-only" datatype="uint8" name="hop-limit" type="leaf"><description><![CDATA[The IP packet's hop limit -- known as TTL (in hops) in
IPv4 packets, and hop limit in IPv6]]>None</description></node></node></node><node access="read-write" name="transport" type="container"><description><![CDATA[Transport fields container]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data]]>None</description><node access="read-write" datatype="oc-pkt-match-types:port-num-range" name="source-port" type="leaf" values="ANY"><description><![CDATA[Source port or range]]>None</description></node><node access="read-write" datatype="oc-pkt-match-types:port-num-range" name="destination-port" type="leaf" values="ANY"><description><![CDATA[Destination port or range]]>None</description></node><node access="read-write" datatype="identityref:oc-pkt-match-types:TCP_FLAGS" name="tcp-flags" type="leaf-list" values="oc-pkt-match-types:TCP_ACK|oc-pkt-match-types:TCP_CWR|oc-pkt-match-types:TCP_ECE|oc-pkt-match-types:TCP_FIN|oc-pkt-match-types:TCP_PSH|oc-pkt-match-types:TCP_RST|oc-pkt-match-types:TCP_SYN|oc-pkt-match-types:TCP_URG"><description><![CDATA[List of TCP flags to match]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[State data]]>None</description><node access="read-only" datatype="oc-pkt-match-types:port-num-range" name="source-port" type="leaf" values="ANY"><description><![CDATA[Source port or range]]>None</description></node><node access="read-only" datatype="oc-pkt-match-types:port-num-range" name="destination-port" type="leaf" values="ANY"><description><![CDATA[Destination port or range]]>None</description></node><node access="read-only" datatype="identityref:oc-pkt-match-types:TCP_FLAGS" name="tcp-flags" type="leaf-list" values="oc-pkt-match-types:TCP_ACK|oc-pkt-match-types:TCP_CWR|oc-pkt-match-types:TCP_ECE|oc-pkt-match-types:TCP_FIN|oc-pkt-match-types:TCP_PSH|oc-pkt-match-types:TCP_RST|oc-pkt-match-types:TCP_SYN|oc-pkt-match-types:TCP_URG"><description><![CDATA[List of TCP flags to match]]>None</description></node></node></node><node access="read-write" name="input-interface" type="container"><description><![CDATA[Input interface container]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Config data]]>None</description></node><node access="read-only" name="state" type="container"><description><![CDATA[State information]]>None</description></node><node access="read-write" name="interface-ref" type="container"><description><![CDATA[Reference to an interface or subinterface]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configured reference to interface / subinterface]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state for interface-ref]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node></node></node><node access="read-write" name="actions" type="container"><description><![CDATA[Enclosing container for list of ACL actions associated
with an entry]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Config data for ACL actions]]>None</description><node access="read-write" datatype="identityref:FORWARDING_ACTION" mandatory="true" name="forwarding-action" type="leaf" values="oc-acl:ACCEPT|oc-acl:DROP|oc-acl:REJECT"><description><![CDATA[Specifies the forwarding action.  One forwarding action
must be specified for each ACL entry]]>None</description></node><node access="read-write" datatype="identityref:LOG_ACTION" default="LOG_NONE" name="log-action" type="leaf" values="oc-acl:LOG_NONE|oc-acl:LOG_SYSLOG"><description><![CDATA[Specifies the log action and destination for
matched packets.  The default is not to log the
packet.]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[State information for ACL actions]]>None</description><node access="read-only" datatype="identityref:FORWARDING_ACTION" mandatory="true" name="forwarding-action" type="leaf" values="oc-acl:ACCEPT|oc-acl:DROP|oc-acl:REJECT"><description><![CDATA[Specifies the forwarding action.  One forwarding action
must be specified for each ACL entry]]>None</description></node><node access="read-only" datatype="identityref:LOG_ACTION" default="LOG_NONE" name="log-action" type="leaf" values="oc-acl:LOG_NONE|oc-acl:LOG_SYSLOG"><description><![CDATA[Specifies the log action and destination for
matched packets.  The default is not to log the
packet.]]>None</description></node></node></node></node></node></node></node><node access="read-write" name="interfaces" type="container"><description><![CDATA[Enclosing container for the list of interfaces on which
ACLs are set]]>None</description><node access="read-write" key="id" name="interface" type="list"><description><![CDATA[List of interfaces on which ACLs are set]]>None</description><node access="read-write" datatype="-&gt; ../config/id" is_key="true" mandatory="true" name="id" type="leaf"><description><![CDATA[Reference to the interface id list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration for ACL per-interface data]]>None</description><node access="read-write" datatype="oc-if:interface-id" name="id" type="leaf"><description><![CDATA[User-defined identifier for the interface -- a common
convention could be '&ltif name&gt.&ltsubif index&gt']]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state for ACL per-interface data]]>None</description><node access="read-only" datatype="oc-if:interface-id" name="id" type="leaf"><description><![CDATA[User-defined identifier for the interface -- a common
convention could be '&ltif name&gt.&ltsubif index&gt']]>None</description></node></node><node access="read-write" name="interface-ref" type="container"><description><![CDATA[Reference to an interface or subinterface]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configured reference to interface / subinterface]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state for interface-ref]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node></node><node access="read-write" name="ingress-acl-sets" type="container"><description><![CDATA[Enclosing container the list of ingress ACLs on the
interface]]>None</description><node access="read-write" key="set-name" name="ingress-acl-set" type="list"><description><![CDATA[List of ingress ACLs on the interface]]>None</description><node access="read-write" datatype="-&gt; ../config/set-name" is_key="true" mandatory="true" name="set-name" type="leaf"><description><![CDATA[Reference to set name list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data ]]>None</description><node access="read-write" datatype="-&gt; /acl/acl-sets/acl-set/config/name" name="set-name" type="leaf"><description><![CDATA[Reference to the ACL set applied on ingress]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for interface ingress ACLs]]>None</description><node access="read-only" datatype="-&gt; /acl/acl-sets/acl-set/config/name" name="set-name" type="leaf"><description><![CDATA[Reference to the ACL set applied on ingress]]>None</description></node></node><node access="read-only" name="acl-entries" type="container"><description><![CDATA[Enclosing container for list of references to ACLs]]>None</description><node access="read-only" key="sequence-id" name="acl-entry" type="list"><description><![CDATA[List of ACL entries assigned to an interface]]>None</description><node access="read-only" datatype="-&gt; ../state/sequence-id" is_key="true" mandatory="true" name="sequence-id" type="leaf"><description><![CDATA[Reference to per-interface acl entry key]]>None</description></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for per-interface ACL entries]]>None</description><node access="read-only" datatype="-&gt; /acl/acl-sets/acl-set[name=current()/../../../../set-name]/acl-entries/acl-entry/sequence-id" name="sequence-id" type="leaf"><description><![CDATA[Reference to an entry in the ACL set applied to an
interface]]>None</description></node><node access="read-only" datatype="yang:counter64" name="matched-packets" type="leaf"><description><![CDATA[Count of the number of packets matching the current ACL
entry.

An implementation should provide this counter on a
per-interface per-ACL-entry if possible.

If an implementation only supports ACL counters per entry
(i.e., not broken out per interface), then the value
should be equal to the aggregate count across all interfaces.

An implementation that provides counters per entry per
interface is not required to also provide an aggregate count,
e.g., per entry -- the user is expected to be able implement
the required aggregation if such a count is needed.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="matched-octets" type="leaf"><description><![CDATA[Count of the number of octets (bytes) matching the current
ACL entry.

An implementation should provide this counter on a
per-interface per-ACL-entry if possible.

If an implementation only supports ACL counters per entry
(i.e., not broken out per interface), then the value
should be equal to the aggregate count across all interfaces.

An implementation that provides counters per entry per
interface is not required to also provide an aggregate count,
e.g., per entry -- the user is expected to be able implement
the required aggregation if such a count is needed.]]>None</description></node></node></node></node></node></node><node access="read-write" name="egress-acl-sets" type="container"><description><![CDATA[Enclosing container the list of egress ACLs on the
interface]]>None</description><node access="read-write" key="set-name" name="egress-acl-set" type="list"><description><![CDATA[List of egress ACLs on the interface]]>None</description><node access="read-write" datatype="-&gt; ../config/set-name" is_key="true" mandatory="true" name="set-name" type="leaf"><description><![CDATA[Reference to set name list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data ]]>None</description><node access="read-write" datatype="-&gt; /acl/acl-sets/acl-set/config/name" name="set-name" type="leaf"><description><![CDATA[Reference to the ACL set applied on egress]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for interface egress ACLs]]>None</description><node access="read-only" datatype="-&gt; /acl/acl-sets/acl-set/config/name" name="set-name" type="leaf"><description><![CDATA[Reference to the ACL set applied on egress]]>None</description></node></node><node access="read-only" name="acl-entries" type="container"><description><![CDATA[Enclosing container for list of references to ACLs]]>None</description><node access="read-only" key="sequence-id" name="acl-entry" type="list"><description><![CDATA[List of ACL entries assigned to an interface]]>None</description><node access="read-only" datatype="-&gt; ../state/sequence-id" is_key="true" mandatory="true" name="sequence-id" type="leaf"><description><![CDATA[Reference to per-interface acl entry key]]>None</description></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for per-interface ACL entries]]>None</description><node access="read-only" datatype="-&gt; /acl/acl-sets/acl-set[name=current()/../../../../set-name]/acl-entries/acl-entry/sequence-id" name="sequence-id" type="leaf"><description><![CDATA[Reference to an entry in the ACL set applied to an
interface]]>None</description></node><node access="read-only" datatype="yang:counter64" name="matched-packets" type="leaf"><description><![CDATA[Count of the number of packets matching the current ACL
entry.

An implementation should provide this counter on a
per-interface per-ACL-entry if possible.

If an implementation only supports ACL counters per entry
(i.e., not broken out per interface), then the value
should be equal to the aggregate count across all interfaces.

An implementation that provides counters per entry per
interface is not required to also provide an aggregate count,
e.g., per entry -- the user is expected to be able implement
the required aggregation if such a count is needed.]]>None</description></node><node access="read-only" datatype="yang:counter64" name="matched-octets" type="leaf"><description><![CDATA[Count of the number of octets (bytes) matching the current
ACL entry.

An implementation should provide this counter on a
per-interface per-ACL-entry if possible.

If an implementation only supports ACL counters per entry
(i.e., not broken out per interface), then the value
should be equal to the aggregate count across all interfaces.

An implementation that provides counters per entry per
interface is not required to also provide an aggregate count,
e.g., per entry -- the user is expected to be able implement
the required aggregation if such a count is needed.]]>None</description></node></node></node></node></node></node></node></node></node></node>