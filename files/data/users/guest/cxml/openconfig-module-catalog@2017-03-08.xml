<node name="openconfig-module-catalog" prefix="oc-cat" type="module"><namespace import="true" module="openconfig-extensions" prefix="oc-ext">http://openconfig.net/yang/openconfig-ext</namespace><namespace import="true" module="openconfig-catalog-types" prefix="oc-cat-types">http://openconfig.net/yang/catalog-types</namespace><namespace import="false" module="openconfig-module-catalog" prefix="oc-cat">http://openconfig.net/yang/module-catalog</namespace><namespace import="true" module="openconfig-inet-types" prefix="oc-inet">http://openconfig.net/yang/types/inet</namespace><node access="read-write" name="organizations" type="container"><description><![CDATA[List of organizations owning modules]]>None</description><node access="read-write" key="name" name="organization" type="list"><description><![CDATA[List of organizations publishing YANG modules or
module bundles]]>None</description><node access="read-write" datatype="string" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[Name of the maintaining organization -- the name should be
supplied in the official format used by the organization.
Standards Body examples:
 IETF, IEEE, MEF, ONF, etc.
Commercial entity examples:
 AT&T, Facebook, &ltVendor&gt
Name of industry forum examples:
 OpenConfig, OpenDaylight, ON.Lab]]>None</description></node><node access="read-write" datatype="identityref:oc-cat-types:ORGANIZATION_TYPE" name="type" type="leaf" values="oc-cat-types:COMMERCIAL|oc-cat-types:INDIVIDUAL|oc-cat-types:INDUSTRY|oc-cat-types:STANDARDS"><description><![CDATA[Type of the publishing organization]]>None</description></node><node access="read-write" datatype="string" name="contact" type="leaf"><description><![CDATA[Contact information for the publishing organization (web
site, email address, etc.)]]>None</description></node><node access="read-write" name="modules" type="container"><description><![CDATA[Modules published by this organization]]>None</description><node access="read-write" key="name version" name="module" type="list"><description><![CDATA[List of published modules from the organization]]>None</description><node access="read-write" datatype="string" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[The name of the module or bundle.  For modules, this
should reflect the 'module' or 'submodule'
statement in the YANG module file.

For bundles, this is the canonical name for the overall
bundle of modules which is to be released together.
This name should be consistent over multiple
releases]]>None</description></node><node access="read-write" datatype="oc-cat-types:module-version-type" is_key="true" mandatory="true" name="version" type="leaf"><description><![CDATA[For individual modules, this is the version number, e.g.,
a semantic version.  The version may be the same as the date
indicated in the module revision statement.

For bundles, this is a semantic version number for the
overall bundle. This version is to be defined as per the
approach specified in the OpenConfig semantic version
guidance - and is of the form x.y.z, where x is the major
version, y is the minor version, and z is the patch level]]>None</description></node><node access="read-write" datatype="string" name="namespace" type="leaf"><description><![CDATA[Published namespace of module, i.e., defined by the
'namespace' ]]>None</description></node><node access="read-write" datatype="string" name="prefix" type="leaf"><description><![CDATA[Published prefix of the module]]>None</description></node><node access="read-write" datatype="string" name="revision" type="leaf"><description><![CDATA[Date in the revision statement of the module]]>None</description></node><node access="read-write" datatype="string" name="summary" type="leaf"><description><![CDATA[Summary description of the module]]>None</description></node><node access="read-write" name="classification" type="container"><description><![CDATA[Container for data describing the module's classification]]>None</description><node access="read-write" datatype="identityref:oc-cat-types:MODULE_CATEGORY_BASE" name="category" type="leaf" values="oc-cat-types:IETF_MODEL_LAYER"><description><![CDATA[Categorization of the module based on identities defined
or used by the publishing organizations.]]>None</description></node><node access="read-write" datatype="identityref:oc-cat-types:MODULE_SUBCATEGORY_BASE" name="subcategory" type="leaf" values="oc-cat-types:IETF_MODEL_TYPE"><description><![CDATA[Sub-categorization of the module based on identities
defined or used by the publishing organizations.]]>None</description></node><node access="read-write" datatype="identityref:oc-cat-types:MODULE_STATUS_TYPE" name="deployment-status" type="leaf" values="oc-cat-types:EXPERIMENTAL|oc-cat-types:PRODUCTION"><description><![CDATA[Deployment status of the module -- experimental,
standards-track, production, etc.]]>None</description></node></node><node access="read-write" name="dependencies" type="container"><description><![CDATA[Data about dependencies of the module]]>None</description><node access="read-write" datatype="-&gt; ../../name" name="required-module" type="leaf-list"><description><![CDATA[List of references to modules that are imported by the
current module.  This list should reflect all of the 'import'
statements in the module.]]>None</description></node></node><node access="read-write" name="access" type="container"><description><![CDATA[Container for data pertaining to retrieval and usage of the
module]]>None</description><node access="read-write" datatype="oc-inet:uri" name="uri" type="leaf"><description><![CDATA[URI where module can be downloaded.  Modules may be
made available from the catalog maintainer, or directly
from the publisher]]>None</description></node><node access="read-write" datatype="string" name="md5-hash" type="leaf"><description><![CDATA[Optional MD5 hash of the module file.  If specified, the
hash may be used by users to validate data integrity]]>None</description></node></node><node access="read-write" name="submodules" type="container"><description><![CDATA[Data for the submodules belonging to a submodule. If the
module does not have any submodules, this container
should be empty.]]>None</description><node access="read-write" key="name" name="submodule" type="list"><description><![CDATA[List of submodules included by a module.  All submodules
specified by 'include' statements in the module should be
included in this list.]]>None</description><node access="read-write" datatype="string" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[Name of the submodule as indicated by its top-level
'submodule' statement]]>None</description></node><node access="read-write" name="access" type="container"><description><![CDATA[Container for data pertaining to retrieval and usage of the
module]]>None</description><node access="read-write" datatype="oc-inet:uri" name="uri" type="leaf"><description><![CDATA[URI where module can be downloaded.  Modules may be
made available from the catalog maintainer, or directly
from the publisher]]>None</description></node><node access="read-write" datatype="string" name="md5-hash" type="leaf"><description><![CDATA[Optional MD5 hash of the module file.  If specified, the
hash may be used by users to validate data integrity]]>None</description></node></node></node></node></node></node><node access="read-write" name="release-bundles" type="container"><description><![CDATA[List of release bundles]]>None</description><node access="read-write" key="name version" name="release-bundle" type="list"><description><![CDATA[List of release bundles - sets of modules and/or
bundles which are interoperable]]>None</description><node access="read-write" datatype="string" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[The name of the module or bundle.  For modules, this
should reflect the 'module' or 'submodule'
statement in the YANG module file.

For bundles, this is the canonical name for the overall
bundle of modules which is to be released together.
This name should be consistent over multiple
releases]]>None</description></node><node access="read-write" datatype="oc-cat-types:module-version-type" is_key="true" mandatory="true" name="version" type="leaf"><description><![CDATA[For individual modules, this is the version number, e.g.,
a semantic version.  The version may be the same as the date
indicated in the module revision statement.

For bundles, this is a semantic version number for the
overall bundle. This version is to be defined as per the
approach specified in the OpenConfig semantic version
guidance - and is of the form x.y.z, where x is the major
version, y is the minor version, and z is the patch level]]>None</description></node><node access="read-write" name="members" type="container"><description><![CDATA[List of bundle members which make up this release bundle. A
member is defined as an individual YANG module specified
in the YANG catalogue, or another release
bundle which can be used to group multiple YANG
models together.]]>None</description><node access="read-write" key="id" name="member" type="list"><description><![CDATA[A set of modules or bundles which are part of the bundle
of models. For example, if 'ietf-yang-types' were to be
specified within the bundle, then this would refer to the
individual entry within the module catalogue. If the type
of the entry is set to bundle, then for example,
openconfig-bgp could be referenced - which itself consists
of separate modules.]]>None</description><node access="read-write" datatype="string" is_key="true" mandatory="true" name="id" type="leaf"><description><![CDATA[Identifier for the bundle member]]>None</description></node><node access="read-write" datatype="identityref:oc-cat-types:CATALOG_MEMBER_TYPE" name="type" type="leaf" values="oc-cat-types:FEATURE_BUNDLE|oc-cat-types:MODULE|oc-cat-types:RELEASE_BUNDLE"><description><![CDATA[The type of member that is to be included within the
release bundle. Release bundles may include modules and
other release bundles.  Both member modules and member
bundles should specify the list of compatible versions.]]>None</description></node><node access="read-write" datatype="-&gt; ../../../../../../../organizations/organization[name=current()/../publisher]/modules/module/name" name="module" type="leaf"><description><![CDATA[Name of the module set which is included in this bundle -
for example, 'openconfig-bgp']]>None</description></node><node access="read-write" datatype="-&gt; ../../../../../../../organizations/organization[name=current()/../publisher]/release-bundles/release-bundle/name" name="release-bundle" type="leaf"><description><![CDATA[Name of the module set which is included in this bundle -
for example, 'openconfig-bgp']]>None</description></node><node access="read-write" datatype="-&gt; ../../../../../../../organizations/organization/name" name="publisher" type="leaf"><description><![CDATA[Reference to the name of the publishing organization]]>None</description></node><node access="read-write" datatype="oc-cat-types:module-version-type" name="compatible-versions" type="leaf-list"><description><![CDATA[A list of semantic version specification of the versions
of the specified module or release bundle which are
compatible when building this version of the bundle.

Version specifications may be added when changes are made
to a module within a bundle, and this does not affect the
interaction between it and other modules. It is expected
that backwards compatible changes to an individual module or
member bundle do not affect the compatibility of that
with other members, and hence wildcard matches are allowed
within this list.]]>None</description></node></node></node></node></node><node access="read-write" name="feature-bundles" type="container"><description><![CDATA[Enclosing container for the list of feature bundles]]>None</description><node access="read-write" key="name version" name="feature-bundle" type="list"><description><![CDATA[List of feature bundles]]>None</description><node access="read-write" datatype="string" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[The name of the module or bundle.  For modules, this
should reflect the 'module' or 'submodule'
statement in the YANG module file.

For bundles, this is the canonical name for the overall
bundle of modules which is to be released together.
This name should be consistent over multiple
releases]]>None</description></node><node access="read-write" datatype="oc-cat-types:module-version-type" is_key="true" mandatory="true" name="version" type="leaf"><description><![CDATA[For individual modules, this is the version number, e.g.,
a semantic version.  The version may be the same as the date
indicated in the module revision statement.

For bundles, this is a semantic version number for the
overall bundle. This version is to be defined as per the
approach specified in the OpenConfig semantic version
guidance - and is of the form x.y.z, where x is the major
version, y is the minor version, and z is the patch level]]>None</description></node><node access="read-write" datatype="string" name="path" type="leaf-list"><description><![CDATA[The list of schema paths included in the feature.  The
paths specify subtrees, i.e., all data underneath the
specified path are included in the feature.]]>None</description></node><node access="read-write" name="release-bundle" type="container"><description><![CDATA[Data to identify the release bundle from which the feature
paths should be specified.  If the feature crosses
release bundles, a new release bundle should be
created to support the feature bundle.]]>None</description><node access="read-write" datatype="-&gt; ../../../../../../organizations/organization[name=current()/../publisher]/release-bundles/release-bundle/name" name="name" type="leaf"><description><![CDATA[Name of the module set which is included in this bundle -
for example, 'openconfig-bgp']]>None</description></node><node access="read-write" datatype="-&gt; ../../../../../../organizations/organization/name" name="publisher" type="leaf"><description><![CDATA[Reference to the name of the publishing organization]]>None</description></node><node access="read-write" datatype="oc-cat-types:module-version-type" name="version" type="leaf"><description><![CDATA[Version of the referenced release bundle]]>None</description></node></node><node access="read-write" name="feature-bundles" type="container"><description><![CDATA[Enclosing container for the list of included feature
bundles.  Feature bundles may be composed from other
smaller feature units]]>None</description><node access="read-write" key="name" name="feature-bundle" type="list"><description><![CDATA[The list of feature bundles included in the current
feature bundle.]]>None</description><node access="read-write" datatype="-&gt; ../../../../../../../organizations/organization[name=current()/../publisher]/feature-bundles/feature-bundle/name" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[Name of the referenced feature bundle]]>None</description></node><node access="read-write" datatype="-&gt; ../../../../../../../organizations/organization/name" name="publisher" type="leaf"><description><![CDATA[Publisher of the referenced feature bundle]]>None</description></node><node access="read-write" datatype="oc-cat-types:module-version-type" name="version" type="leaf"><description><![CDATA[Version of the referenced feature bundle]]>None</description></node></node></node></node></node><node access="read-write" name="implementations" type="container"><description><![CDATA[Container for module implementation information]]>None</description><node access="read-write" key="id" name="implementation" type="list"><description><![CDATA[List of available implementations, keyed by an identifier
provided by either the implementor or the module
maintainer.  Such a key avoids needing a complex composite
key to uniquely identify an implementation.]]>None</description><node access="read-write" datatype="string" is_key="true" mandatory="true" name="id" type="leaf"><description><![CDATA[An identifier for the implementation, provided by the
implementor.  This id should uniquely identify a specific
implementation of the module, e.g., based on the vendor,
platform, and platform version.]]>None</description></node><node access="read-write" datatype="string" name="description" type="leaf"><description><![CDATA[A text summary of important information about the
implementation]]>None</description></node><node access="read-write" datatype="union" name="reference" type="leaf"><description><![CDATA[A URI (preferred) or text reference to more detailed
information about the implementation.]]>None</description></node><node access="read-write" datatype="string" name="platform" type="leaf"><description><![CDATA[Name of the platform on which the implementation
is available -- this could be the model name of a network
device, a server OS, etc.]]>None</description></node><node access="read-write" datatype="string" name="platform-version" type="leaf"><description><![CDATA[Implementor-defined version name or number of the
module implementation, corresponding to the platform.
This could be the firmware version of a network device
such as a router, OS version, or other server platform
version.]]>None</description></node><node access="read-write" datatype="identityref:oc-cat-types:IMPLEMENTATION_STATUS_TYPE" name="status" type="leaf" values="oc-cat-types:COMPLETE|oc-cat-types:IN_PROGRESS|oc-cat-types:PARTIAL|oc-cat-types:PLANNED"><description><![CDATA[Indicates the status of the implementation, e.g.,
complete, partial, in-progress, etc.  Implementors
may define additional values for the base identity]]>None</description></node><node access="read-write" name="feature-bundles" type="container"><description><![CDATA[Enclosing container for the list of feature bundles]]>None</description><node access="read-write" key="name version" name="feature-bundle" type="list"><description><![CDATA[List of feature bundles supported by the implementation]]>None</description><node access="read-write" datatype="-&gt; ../../../../../../../organizations/organization[name=current()/../publisher]/feature-bundles/feature-bundle/name" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[Name of the referenced feature bundle]]>None</description></node><node access="read-write" datatype="-&gt; ../../../../../../../organizations/organization/name" name="publisher" type="leaf"><description><![CDATA[Publisher of the referenced feature bundle]]>None</description></node><node access="read-write" datatype="oc-cat-types:module-version-type" is_key="true" mandatory="true" name="version" type="leaf"><description><![CDATA[Version of the referenced feature bundle]]>None</description></node></node></node></node></node></node></node></node>