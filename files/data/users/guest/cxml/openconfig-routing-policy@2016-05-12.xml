<node name="openconfig-routing-policy" prefix="oc-rpol" type="module"><namespace import="false" module="openconfig-network-instance-l3" prefix="oc-ni-l3">http://openconfig.net/yang/network-instance-l3</namespace><namespace import="true" module="ietf-inet-types" prefix="inet">urn:ietf:params:xml:ns:yang:ietf-inet-types</namespace><namespace import="false" module="openconfig-mpls" prefix="oc-mpls">http://openconfig.net/yang/mpls</namespace><namespace import="true" module="openconfig-interfaces" prefix="oc-if">http://openconfig.net/yang/interfaces</namespace><namespace import="false" module="openconfig-bgp" prefix="oc-bgp">http://openconfig.net/yang/bgp</namespace><namespace import="false" module="openconfig-isis-lsdb-types" prefix="oc-isis-lsdb-types">http://openconfig.net/yang/isis-lsdb-types</namespace><namespace import="false" module="openconfig-vlan-types" prefix="oc-vlan-types">http://openconfig.net/yang/vlan-types</namespace><namespace import="false" module="openconfig-mpls-sr" prefix="oc-mpls-sr">http://openconfig.net/yang/mpls-sr</namespace><namespace import="false" module="openconfig-mpls-types" prefix="oc-mpls-types">http://openconfig.net/yang/mpls-types</namespace><namespace import="false" module="openconfig-bgp-types" prefix="oc-bgp-types">http://openconfig.net/yang/bgp-types</namespace><namespace import="false" module="openconfig-isis-types" prefix="oc-isis-types">http://openconfig.net/yang/isis-types</namespace><namespace import="false" module="openconfig-network-instance" prefix="oc-netinst">http://openconfig.net/yang/network-instance</namespace><namespace import="false" module="openconfig-if-aggregate" prefix="oc-lag">http://openconfig.net/yang/interfaces/aggregate</namespace><namespace import="false" module="openconfig-aft-types" prefix="oc-aftt">http://openconfig.net/yang/fib-types</namespace><namespace import="false" module="iana-if-type" prefix="ianaift">urn:ietf:params:xml:ns:yang:iana-if-type</namespace><namespace import="false" module="openconfig-ospf-types" prefix="oc-ospf-types">http://openconfig.net/yang/ospf-types</namespace><namespace import="false" module="ietf-yang-types" prefix="yang">urn:ietf:params:xml:ns:yang:ietf-yang-types</namespace><namespace import="false" module="openconfig-packet-match" prefix="oc-pkt-match">http://openconfig.net/yang/header-fields</namespace><namespace import="false" module="openconfig-types" prefix="oc-types">http://openconfig.net/yang/openconfig-types</namespace><namespace import="false" module="openconfig-policy-forwarding" prefix="oc-pf">http://openconfig.net/yang/policy-forwarding</namespace><namespace import="false" module="ietf-interfaces" prefix="if">urn:ietf:params:xml:ns:yang:ietf-interfaces</namespace><namespace import="false" module="openconfig-inet-types" prefix="oc-inet">http://openconfig.net/yang/types/inet</namespace><namespace import="false" module="openconfig-routing-policy" prefix="oc-rpol">http://openconfig.net/yang/routing-policy</namespace><namespace import="false" module="openconfig-ospf-policy" prefix="oc-ospf-pol">http://openconfig.net/yang/ospf-policy</namespace><namespace import="true" module="openconfig-extensions" prefix="oc-ext">http://openconfig.net/yang/openconfig-ext</namespace><namespace import="false" module="openconfig-isis" prefix="oc-isis">http://openconfig.net/yang/openconfig-isis</namespace><namespace import="false" module="openconfig-ospfv2" prefix="oc-ospfv2">http://openconfig.net/yang/ospfv2</namespace><namespace import="false" module="openconfig-vlan" prefix="oc-vlan">http://openconfig.net/yang/vlan</namespace><namespace import="false" module="openconfig-packet-match-types" prefix="oc-pkt-match-types">http://openconfig.net/yang/packet-match-types</namespace><namespace import="false" module="openconfig-mpls-rsvp" prefix="oc-rsvp">http://openconfig.net/yang/rsvp</namespace><namespace import="false" module="openconfig-bgp-policy" prefix="oc-bgp-pol">http://openconfig.net/yang/bgp-policy</namespace><namespace import="true" module="openconfig-policy-types" prefix="oc-pol-types">http://openconfig.net/yang/policy-types</namespace><namespace import="false" module="openconfig-aft" prefix="oc-aft">http://openconfig.net/yang/aft</namespace><namespace import="false" module="openconfig-local-routing" prefix="oc-loc-rt">http://openconfig.net/yang/local-routing</namespace><namespace import="false" module="openconfig-isis-policy" prefix="oc-isis-pol">http://openconfig.net/yang/openconfig-isis-policy</namespace><namespace import="false" module="openconfig-mpls-ldp" prefix="ldp">http://openconfig.net/yang/ldp</namespace><namespace import="false" module="openconfig-yang-types" prefix="oc-yang">http://openconfig.net/yang/types/yang</namespace><namespace import="false" module="openconfig-network-instance-types" prefix="oc-ni-types">http://openconfig.net/yang/network-instance-types</namespace><namespace import="false" module="openconfig-segment-routing" prefix="oc-sr">http://openconfig.net/yang/sr</namespace><namespace import="false" module="openconfig-if-ethernet" prefix="oc-eth">http://openconfig.net/yang/interfaces/ethernet</namespace><node access="read-write" name="routing-policy" type="container"><description><![CDATA[Top-level container for all routing policy configuration]]>None</description><node access="read-write" name="defined-sets" type="container"><description><![CDATA[Predefined sets of attributes used in policy match
statements]]>None</description><node access="read-write" name="prefix-sets" type="container"><description><![CDATA[Enclosing container ]]>None</description><node access="read-write" key="prefix-set-name" name="prefix-set" type="list"><description><![CDATA[List of the defined prefix sets]]>None</description><node access="read-write" datatype="-&gt; ../config/prefix-set-name" is_key="true" mandatory="true" name="prefix-set-name" type="leaf"><description><![CDATA[Reference to prefix name list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for prefix sets]]>None</description><node access="read-write" datatype="string" name="prefix-set-name" type="leaf"><description><![CDATA[name / label of the prefix set -- this is used to
reference the set in match conditions]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data ]]>None</description><node access="read-only" datatype="string" name="prefix-set-name" type="leaf"><description><![CDATA[name / label of the prefix set -- this is used to
reference the set in match conditions]]>None</description></node></node><node access="read-write" name="prefixes" type="container"><description><![CDATA[Enclosing container for the list of prefixes in a policy
prefix list]]>None</description><node access="read-write" key="ip-prefix masklength-range" name="prefix" type="list"><description><![CDATA[List of prefixes in the prefix set]]>None</description><node access="read-write" datatype="-&gt; ../config/ip-prefix" is_key="true" mandatory="true" name="ip-prefix" type="leaf"><description><![CDATA[Reference to the ip-prefix list key.]]>None</description></node><node access="read-write" datatype="-&gt; ../config/masklength-range" is_key="true" mandatory="true" name="masklength-range" type="leaf"><description><![CDATA[Reference to the masklength-range list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for prefix definition]]>None</description><node access="read-write" datatype="inet:ip-prefix" mandatory="true" name="ip-prefix" type="leaf"><description><![CDATA[The prefix member in CIDR notation -- while the
prefix may be either IPv4 or IPv6, most
implementations require all members of the prefix set
to be the same address family.  Mixing address types in
the same prefix set is likely to cause an error.]]>None</description></node><node access="read-write" datatype="string" name="masklength-range" type="leaf"><description><![CDATA[Defines a range for the masklength, or 'exact' if
the prefix has an exact length.

Example: 10.3.192.0/21 through 10.3.192.0/24 would be
expressed as prefix: 10.3.192.0/21,
masklength-range: 21..24.

Example: 10.3.192.0/21 would be expressed as
prefix: 10.3.192.0/21,
masklength-range: exact]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for prefix definition]]>None</description><node access="read-only" datatype="inet:ip-prefix" mandatory="true" name="ip-prefix" type="leaf"><description><![CDATA[The prefix member in CIDR notation -- while the
prefix may be either IPv4 or IPv6, most
implementations require all members of the prefix set
to be the same address family.  Mixing address types in
the same prefix set is likely to cause an error.]]>None</description></node><node access="read-only" datatype="string" name="masklength-range" type="leaf"><description><![CDATA[Defines a range for the masklength, or 'exact' if
the prefix has an exact length.

Example: 10.3.192.0/21 through 10.3.192.0/24 would be
expressed as prefix: 10.3.192.0/21,
masklength-range: 21..24.

Example: 10.3.192.0/21 would be expressed as
prefix: 10.3.192.0/21,
masklength-range: exact]]>None</description></node></node></node></node></node></node><node access="read-write" name="neighbor-sets" type="container"><description><![CDATA[Enclosing container for the list of neighbor set
definitions]]>None</description><node access="read-write" key="neighbor-set-name" name="neighbor-set" type="list"><description><![CDATA[List of defined neighbor sets for use in policies.]]>None</description><node access="read-write" datatype="-&gt; ../config/neighbor-set-name" is_key="true" mandatory="true" name="neighbor-set-name" type="leaf"><description><![CDATA[Reference to the neighbor set name list key.]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for neighbor sets.]]>None</description><node access="read-write" datatype="string" name="neighbor-set-name" type="leaf"><description><![CDATA[name / label of the neighbor set -- this is used to
reference the set in match conditions]]>None</description></node><node access="read-write" datatype="inet:ip-address-no-zone" name="address" type="leaf-list"><description><![CDATA[List of IP addresses in the neighbor set]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for neighbor sets.]]>None</description><node access="read-only" datatype="string" name="neighbor-set-name" type="leaf"><description><![CDATA[name / label of the neighbor set -- this is used to
reference the set in match conditions]]>None</description></node><node access="read-only" datatype="inet:ip-address-no-zone" name="address" type="leaf-list"><description><![CDATA[List of IP addresses in the neighbor set]]>None</description></node></node></node></node><node access="read-write" name="tag-sets" type="container"><description><![CDATA[Enclosing container for the list of tag sets.]]>None</description><node access="read-write" key="tag-set-name" name="tag-set" type="list"><description><![CDATA[List of tag set definitions.]]>None</description><node access="read-write" datatype="-&gt; ../config/tag-set-name" is_key="true" mandatory="true" name="tag-set-name" type="leaf"><description><![CDATA[Reference to the tag set name list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for tag sets]]>None</description><node access="read-write" datatype="string" name="tag-set-name" type="leaf"><description><![CDATA[name / label of the tag set -- this is used to reference
the set in match conditions]]>None</description></node><node access="read-write" datatype="oc-pol-types:tag-type" name="tag-value" type="leaf-list"><description><![CDATA[Value of the tag set member]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for tag sets]]>None</description><node access="read-only" datatype="string" name="tag-set-name" type="leaf"><description><![CDATA[name / label of the tag set -- this is used to reference
the set in match conditions]]>None</description></node><node access="read-only" datatype="oc-pol-types:tag-type" name="tag-value" type="leaf-list"><description><![CDATA[Value of the tag set member]]>None</description></node></node></node></node><node access="read-write" name="oc-bgp-pol:bgp-defined-sets" type="container"><description><![CDATA[BGP-related set definitions for policy match conditions]]>None</description><node access="read-write" name="oc-bgp-pol:community-sets" type="container"><description><![CDATA[Enclosing container for list of defined BGP community sets]]>None</description><node access="read-write" key="community-set-name" name="oc-bgp-pol:community-set" type="list"><description><![CDATA[List of defined BGP community sets]]>None</description><node access="read-write" datatype="-&gt; ../config/community-set-name" is_key="true" mandatory="true" name="oc-bgp-pol:community-set-name" type="leaf"><description><![CDATA[Reference to list key]]>None</description></node><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for BGP community sets]]>None</description><node access="read-write" datatype="string" mandatory="true" name="oc-bgp-pol:community-set-name" type="leaf"><description><![CDATA[name / label of the community set -- this is used to
reference the set in match conditions]]>None</description></node><node access="read-write" datatype="union" name="oc-bgp-pol:community-member" type="leaf-list"><description><![CDATA[members of the community set]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for BGP community sets]]>None</description><node access="read-only" datatype="string" mandatory="true" name="oc-bgp-pol:community-set-name" type="leaf"><description><![CDATA[name / label of the community set -- this is used to
reference the set in match conditions]]>None</description></node><node access="read-only" datatype="union" name="oc-bgp-pol:community-member" type="leaf-list"><description><![CDATA[members of the community set]]>None</description></node></node></node></node><node access="read-write" name="oc-bgp-pol:ext-community-sets" type="container"><description><![CDATA[Enclosing container for list of extended BGP community
sets]]>None</description><node access="read-write" key="ext-community-set-name" name="oc-bgp-pol:ext-community-set" type="list"><description><![CDATA[List of defined extended BGP community sets]]>None</description><node access="read-write" datatype="-&gt; ../config/ext-community-set-name" is_key="true" mandatory="true" name="oc-bgp-pol:ext-community-set-name" type="leaf"><description><![CDATA[Reference to list key]]>None</description></node><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for extended BGP community sets]]>None</description><node access="read-write" datatype="string" name="oc-bgp-pol:ext-community-set-name" type="leaf"><description><![CDATA[name / label of the extended community set -- this is
used to reference the set in match conditions]]>None</description></node><node access="read-write" datatype="union" name="oc-bgp-pol:ext-community-member" type="leaf-list"><description><![CDATA[members of the extended community set]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for extended BGP community sets]]>None</description><node access="read-only" datatype="string" name="oc-bgp-pol:ext-community-set-name" type="leaf"><description><![CDATA[name / label of the extended community set -- this is
used to reference the set in match conditions]]>None</description></node><node access="read-only" datatype="union" name="oc-bgp-pol:ext-community-member" type="leaf-list"><description><![CDATA[members of the extended community set]]>None</description></node></node></node></node><node access="read-write" name="oc-bgp-pol:as-path-sets" type="container"><description><![CDATA[Enclosing container for list of define AS path sets]]>None</description><node access="read-write" key="as-path-set-name" name="oc-bgp-pol:as-path-set" type="list"><description><![CDATA[List of defined AS path sets]]>None</description><node access="read-write" datatype="-&gt; ../config/as-path-set-name" is_key="true" mandatory="true" name="oc-bgp-pol:as-path-set-name" type="leaf"><description><![CDATA[Reference to list key]]>None</description></node><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for AS path sets]]>None</description><node access="read-write" datatype="string" name="oc-bgp-pol:as-path-set-name" type="leaf"><description><![CDATA[name of the AS path set -- this is used to reference
the set in match conditions]]>None</description></node><node access="read-write" datatype="string" name="oc-bgp-pol:as-path-set-member" type="leaf-list"><description><![CDATA[AS path expression -- list of ASes in the set]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for AS path sets]]>None</description><node access="read-only" datatype="string" name="oc-bgp-pol:as-path-set-name" type="leaf"><description><![CDATA[name of the AS path set -- this is used to reference
the set in match conditions]]>None</description></node><node access="read-only" datatype="string" name="oc-bgp-pol:as-path-set-member" type="leaf-list"><description><![CDATA[AS path expression -- list of ASes in the set]]>None</description></node></node></node></node></node></node><node access="read-write" name="policy-definitions" type="container"><description><![CDATA[Enclosing container for the list of top-level policy
 definitions]]>None</description><node access="read-write" key="name" name="policy-definition" type="list"><description><![CDATA[List of top-level policy definitions, keyed by unique
name.  These policy definitions are expected to be
referenced (by name) in policy chains specified in import
or export configuration statements.]]>None</description><node access="read-write" datatype="-&gt; ../config/name" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[Reference to the list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for policy defintions]]>None</description><node access="read-write" datatype="string" name="name" type="leaf"><description><![CDATA[Name of the top-level policy definition -- this name
is used in references to the current policy]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for policy definitions]]>None</description><node access="read-only" datatype="string" name="name" type="leaf"><description><![CDATA[Name of the top-level policy definition -- this name
is used in references to the current policy]]>None</description></node></node><node access="read-write" name="statements" type="container"><description><![CDATA[Enclosing container for policy statements]]>None</description><node access="read-write" key="name" name="statement" type="list"><description><![CDATA[Policy statements group conditions and actions
within a policy definition.  They are evaluated in
the order specified (see the description of policy
evaluation at the top of this module.]]>None</description><node access="read-write" datatype="-&gt; ../config/name" is_key="true" mandatory="true" name="name" type="leaf"><description><![CDATA[Reference to list key]]>None</description></node><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for policy statements]]>None</description><node access="read-write" datatype="string" name="name" type="leaf"><description><![CDATA[name of the policy statement]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for policy statements]]>None</description><node access="read-only" datatype="string" name="name" type="leaf"><description><![CDATA[name of the policy statement]]>None</description></node></node><node access="read-write" name="conditions" type="container"><description><![CDATA[Condition statements for the current policy statement]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for policy conditions]]>None</description><node access="read-write" datatype="-&gt; /routing-policy/policy-definitions/policy-definition/name" name="call-policy" type="leaf"><description><![CDATA[Applies the statements from the specified policy
definition and then returns control the current
policy statement. Note that the called policy may
itself call other policies (subject to
implementation limitations). This is intended to
provide a policy 'subroutine' capability.  The
called policy should contain an explicit or a
default route disposition that returns an
effective true (accept-route) or false
(reject-route), otherwise the behavior may be
ambiguous and implementation dependent]]>None</description></node><node access="read-write" datatype="identityref:oc-pol-types:INSTALL_PROTOCOL_TYPE" name="install-protocol-eq" type="leaf" values="oc-pol-types:BGP|oc-pol-types:DIRECTLY_CONNECTED|oc-pol-types:ISIS|oc-pol-types:LOCAL_AGGREGATE|oc-pol-types:OSPF|oc-pol-types:OSPF3|oc-pol-types:STATIC"><description><![CDATA[Condition to check the protocol / method used to install
the route into the local routing table]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for policy conditions]]>None</description><node access="read-only" datatype="-&gt; /routing-policy/policy-definitions/policy-definition/name" name="call-policy" type="leaf"><description><![CDATA[Applies the statements from the specified policy
definition and then returns control the current
policy statement. Note that the called policy may
itself call other policies (subject to
implementation limitations). This is intended to
provide a policy 'subroutine' capability.  The
called policy should contain an explicit or a
default route disposition that returns an
effective true (accept-route) or false
(reject-route), otherwise the behavior may be
ambiguous and implementation dependent]]>None</description></node><node access="read-only" datatype="identityref:oc-pol-types:INSTALL_PROTOCOL_TYPE" name="install-protocol-eq" type="leaf" values="oc-pol-types:BGP|oc-pol-types:DIRECTLY_CONNECTED|oc-pol-types:ISIS|oc-pol-types:LOCAL_AGGREGATE|oc-pol-types:OSPF|oc-pol-types:OSPF3|oc-pol-types:STATIC"><description><![CDATA[Condition to check the protocol / method used to install
the route into the local routing table]]>None</description></node></node><node access="read-write" name="match-interface" type="container"><description><![CDATA[Top-level container for interface match conditions]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for interface match conditions]]>None</description><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface/name" name="interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-write" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for interface match conditions]]>None</description><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface/name" name="interface" type="leaf"><description><![CDATA[Reference to a base interface.  If a reference to a
subinterface is required, this leaf must be specified
to indicate the base interface.]]>None</description></node><node access="read-only" datatype="-&gt; /oc-if:interfaces/interface[oc-if:name=current()/../interface]/subinterfaces/subinterface/index" name="subinterface" type="leaf"><description><![CDATA[Reference to a subinterface -- this requires the base
interface to be specified using the interface leaf in
this container.  If only a reference to a base interface
is requuired, this leaf should not be set.]]>None</description></node></node></node><node access="read-write" name="match-prefix-set" type="container"><description><![CDATA[Match a referenced prefix-set according to the logic
defined in the match-set-options leaf]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for a prefix-set condition]]>None</description><node access="read-write" datatype="-&gt; /routing-policy/defined-sets/prefix-sets/prefix-set/prefix-set-name" name="prefix-set" type="leaf"><description><![CDATA[References a defined prefix set]]>None</description></node><node access="read-write" datatype="oc-pol-types:match-set-options-restricted-type" name="match-set-options" type="leaf" values="ANY|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation.  This leaf only supports matching on ANY
member of the set or inverting the match.  Matching on ALL is
not supported)]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for a prefix-set condition]]>None</description><node access="read-only" datatype="-&gt; /routing-policy/defined-sets/prefix-sets/prefix-set/prefix-set-name" name="prefix-set" type="leaf"><description><![CDATA[References a defined prefix set]]>None</description></node><node access="read-only" datatype="oc-pol-types:match-set-options-restricted-type" name="match-set-options" type="leaf" values="ANY|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation.  This leaf only supports matching on ANY
member of the set or inverting the match.  Matching on ALL is
not supported)]]>None</description></node></node></node><node access="read-write" name="match-neighbor-set" type="container"><description><![CDATA[Match a referenced neighbor set according to the logic
defined in the match-set-options-leaf]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data ]]>None</description><node access="read-write" datatype="-&gt; /routing-policy/defined-sets/neighbor-sets/neighbor-set/neighbor-set-name" name="neighbor-set" type="leaf"><description><![CDATA[References a defined neighbor set]]>None</description></node><node access="read-write" datatype="oc-pol-types:match-set-options-restricted-type" name="match-set-options" type="leaf" values="ANY|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation.  This leaf only supports matching on ANY
member of the set or inverting the match.  Matching on ALL is
not supported)]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data ]]>None</description><node access="read-only" datatype="-&gt; /routing-policy/defined-sets/neighbor-sets/neighbor-set/neighbor-set-name" name="neighbor-set" type="leaf"><description><![CDATA[References a defined neighbor set]]>None</description></node><node access="read-only" datatype="oc-pol-types:match-set-options-restricted-type" name="match-set-options" type="leaf" values="ANY|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation.  This leaf only supports matching on ANY
member of the set or inverting the match.  Matching on ALL is
not supported)]]>None</description></node></node></node><node access="read-write" name="match-tag-set" type="container"><description><![CDATA[Match a referenced tag set according to the logic defined
in the match-options-set leaf]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for tag-set conditions]]>None</description><node access="read-write" datatype="-&gt; /routing-policy/defined-sets/tag-sets/tag-set/tag-set-name" name="tag-set" type="leaf"><description><![CDATA[References a defined tag set]]>None</description></node><node access="read-write" datatype="oc-pol-types:match-set-options-restricted-type" name="match-set-options" type="leaf" values="ANY|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation.  This leaf only supports matching on ANY
member of the set or inverting the match.  Matching on ALL is
not supported)]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data tag-set conditions]]>None</description><node access="read-only" datatype="-&gt; /routing-policy/defined-sets/tag-sets/tag-set/tag-set-name" name="tag-set" type="leaf"><description><![CDATA[References a defined tag set]]>None</description></node><node access="read-only" datatype="oc-pol-types:match-set-options-restricted-type" name="match-set-options" type="leaf" values="ANY|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation.  This leaf only supports matching on ANY
member of the set or inverting the match.  Matching on ALL is
not supported)]]>None</description></node></node></node><node access="read-write" name="igp-conditions" type="container"><description><![CDATA[Policy conditions for IGP attributes]]>None</description><node access="read-write" name="oc-isis-pol:isis-conditions" type="container"><description><![CDATA[Match conditions relating to the IS-IS protocol]]>None</description><node access="read-write" name="oc-isis-pol:config" type="container"><description><![CDATA[Configuration parameters relating to IS-IS match
conditions]]>None</description><node access="read-write" datatype="isis-types:level-number" name="oc-isis-pol:level-eq" type="leaf"><description><![CDATA[Match the level that the IS-IS prefix is within. This can
be used in the case that import or export policies refer
to an IS-IS instance that has multiple levels configured
within it]]>None</description></node></node><node access="read-only" name="oc-isis-pol:state" type="container"><description><![CDATA[Operational state parameters relating to IS-IS match
conditions]]>None</description><node access="read-only" datatype="isis-types:level-number" name="oc-isis-pol:level-eq" type="leaf"><description><![CDATA[Match the level that the IS-IS prefix is within. This can
be used in the case that import or export policies refer
to an IS-IS instance that has multiple levels configured
within it]]>None</description></node></node></node></node><node access="read-write" name="oc-bgp-pol:bgp-conditions" type="container"><description><![CDATA[Top-level container ]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for BGP-specific policy conditions]]>None</description><node access="read-write" datatype="uint32" name="oc-bgp-pol:med-eq" type="leaf"><description><![CDATA[Condition to check if the received MED value is equal to
the specified value]]>None</description></node><node access="read-write" datatype="oc-bgp-types:bgp-origin-attr-type" name="oc-bgp-pol:origin-eq" type="leaf" values="IGP|EGP|INCOMPLETE"><description><![CDATA[Condition to check if the route origin is equal to the
specified value]]>None</description></node><node access="read-write" datatype="oc-inet:ip-address" name="oc-bgp-pol:next-hop-in" type="leaf-list"><description><![CDATA[List of next hop addresses to check for in the route
update]]>None</description></node><node access="read-write" datatype="identityref:oc-bgp-types:AFI_SAFI_TYPE" name="oc-bgp-pol:afi-safi-in" type="leaf-list" values="oc-bgp-types:IPV4_LABELED_UNICAST|oc-bgp-types:IPV4_UNICAST|oc-bgp-types:IPV6_LABELED_UNICAST|oc-bgp-types:IPV6_UNICAST|oc-bgp-types:L2VPN_EVPN|oc-bgp-types:L2VPN_VPLS|oc-bgp-types:L3VPN_IPV4_MULTICAST|oc-bgp-types:L3VPN_IPV4_UNICAST|oc-bgp-types:L3VPN_IPV6_MULTICAST|oc-bgp-types:L3VPN_IPV6_UNICAST"><description><![CDATA[List of address families which the NLRI may be
within]]>None</description></node><node access="read-write" datatype="uint32" name="oc-bgp-pol:local-pref-eq" type="leaf"><description><![CDATA[Condition to check if the local pref attribute is equal to
the specified value]]>None</description></node><node access="read-write" datatype="enumeration" name="oc-bgp-pol:route-type" type="leaf" values="INTERNAL|EXTERNAL"><description><![CDATA[Condition to check the route type in the route update]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for BGP-specific policy
conditions]]>None</description><node access="read-only" datatype="uint32" name="oc-bgp-pol:med-eq" type="leaf"><description><![CDATA[Condition to check if the received MED value is equal to
the specified value]]>None</description></node><node access="read-only" datatype="oc-bgp-types:bgp-origin-attr-type" name="oc-bgp-pol:origin-eq" type="leaf" values="IGP|EGP|INCOMPLETE"><description><![CDATA[Condition to check if the route origin is equal to the
specified value]]>None</description></node><node access="read-only" datatype="oc-inet:ip-address" name="oc-bgp-pol:next-hop-in" type="leaf-list"><description><![CDATA[List of next hop addresses to check for in the route
update]]>None</description></node><node access="read-only" datatype="identityref:oc-bgp-types:AFI_SAFI_TYPE" name="oc-bgp-pol:afi-safi-in" type="leaf-list" values="oc-bgp-types:IPV4_LABELED_UNICAST|oc-bgp-types:IPV4_UNICAST|oc-bgp-types:IPV6_LABELED_UNICAST|oc-bgp-types:IPV6_UNICAST|oc-bgp-types:L2VPN_EVPN|oc-bgp-types:L2VPN_VPLS|oc-bgp-types:L3VPN_IPV4_MULTICAST|oc-bgp-types:L3VPN_IPV4_UNICAST|oc-bgp-types:L3VPN_IPV6_MULTICAST|oc-bgp-types:L3VPN_IPV6_UNICAST"><description><![CDATA[List of address families which the NLRI may be
within]]>None</description></node><node access="read-only" datatype="uint32" name="oc-bgp-pol:local-pref-eq" type="leaf"><description><![CDATA[Condition to check if the local pref attribute is equal to
the specified value]]>None</description></node><node access="read-only" datatype="enumeration" name="oc-bgp-pol:route-type" type="leaf" values="INTERNAL|EXTERNAL"><description><![CDATA[Condition to check the route type in the route update]]>None</description></node></node><node access="read-write" name="oc-bgp-pol:community-count" type="container"><description><![CDATA[Value and comparison operations for conditions based on the
number of communities in the route update]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for community count condition]]>None</description><node access="read-write" datatype="identityref:ATTRIBUTE_COMPARISON" name="oc-bgp-pol:operator" type="leaf"><description><![CDATA[type of comparison to be performed]]>None</description></node><node access="read-write" datatype="uint32" name="oc-bgp-pol:value" type="leaf"><description><![CDATA[value to compare with the community count]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for community count condition]]>None</description><node access="read-only" datatype="identityref:ATTRIBUTE_COMPARISON" name="oc-bgp-pol:operator" type="leaf"><description><![CDATA[type of comparison to be performed]]>None</description></node><node access="read-only" datatype="uint32" name="oc-bgp-pol:value" type="leaf"><description><![CDATA[value to compare with the community count]]>None</description></node></node></node><node access="read-write" name="oc-bgp-pol:as-path-length" type="container"><description><![CDATA[Value and comparison operations for conditions based on the
length of the AS path in the route update]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for AS path length condition]]>None</description><node access="read-write" datatype="identityref:ATTRIBUTE_COMPARISON" name="oc-bgp-pol:operator" type="leaf"><description><![CDATA[type of comparison to be performed]]>None</description></node><node access="read-write" datatype="uint32" name="oc-bgp-pol:value" type="leaf"><description><![CDATA[value to compare with the community count]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for AS path length condition]]>None</description><node access="read-only" datatype="identityref:ATTRIBUTE_COMPARISON" name="oc-bgp-pol:operator" type="leaf"><description><![CDATA[type of comparison to be performed]]>None</description></node><node access="read-only" datatype="uint32" name="oc-bgp-pol:value" type="leaf"><description><![CDATA[value to compare with the community count]]>None</description></node></node></node><node access="read-write" name="oc-bgp-pol:match-community-set" type="container"><description><![CDATA[Top-level container for match conditions on communities.
Match a referenced community-set according to the logic
defined in the match-set-options leaf]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for match conditions on communities]]>None</description><node access="read-write" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/community-sets/community-set/community-set-name" name="oc-bgp-pol:community-set" type="leaf"><description><![CDATA[References a defined community set]]>None</description></node><node access="read-write" datatype="oc-pol-types:match-set-options-type" name="oc-bgp-pol:match-set-options" type="leaf" values="ANY|ALL|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data ]]>None</description><node access="read-only" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/community-sets/community-set/community-set-name" name="oc-bgp-pol:community-set" type="leaf"><description><![CDATA[References a defined community set]]>None</description></node><node access="read-only" datatype="oc-pol-types:match-set-options-type" name="oc-bgp-pol:match-set-options" type="leaf" values="ANY|ALL|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation]]>None</description></node></node></node><node access="read-write" name="oc-bgp-pol:match-ext-community-set" type="container"><description><![CDATA[Match a referenced extended community-set according to the
logic defined in the match-set-options leaf]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for match conditions on extended
communities]]>None</description><node access="read-write" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/ext-community-sets/ext-community-set/ext-community-set-name" name="oc-bgp-pol:ext-community-set" type="leaf"><description><![CDATA[References a defined extended community set]]>None</description></node><node access="read-write" datatype="oc-pol-types:match-set-options-type" name="oc-bgp-pol:match-set-options" type="leaf" values="ANY|ALL|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for match conditions on extended
communities]]>None</description><node access="read-only" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/ext-community-sets/ext-community-set/ext-community-set-name" name="oc-bgp-pol:ext-community-set" type="leaf"><description><![CDATA[References a defined extended community set]]>None</description></node><node access="read-only" datatype="oc-pol-types:match-set-options-type" name="oc-bgp-pol:match-set-options" type="leaf" values="ANY|ALL|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation]]>None</description></node></node></node><node access="read-write" name="oc-bgp-pol:match-as-path-set" type="container"><description><![CDATA[Match a referenced as-path set according to the logic
defined in the match-set-options leaf]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for match conditions on AS path set]]>None</description><node access="read-write" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/as-path-sets/as-path-set/as-path-set-name" name="oc-bgp-pol:as-path-set" type="leaf"><description><![CDATA[References a defined AS path set]]>None</description></node><node access="read-write" datatype="oc-pol-types:match-set-options-type" name="oc-bgp-pol:match-set-options" type="leaf" values="ANY|ALL|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for match conditions on AS
path set]]>None</description><node access="read-only" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/as-path-sets/as-path-set/as-path-set-name" name="oc-bgp-pol:as-path-set" type="leaf"><description><![CDATA[References a defined AS path set]]>None</description></node><node access="read-only" datatype="oc-pol-types:match-set-options-type" name="oc-bgp-pol:match-set-options" type="leaf" values="ANY|ALL|INVERT"><description><![CDATA[Optional parameter that governs the behaviour of the
match operation]]>None</description></node></node></node></node><node access="read-write" name="oc-ospf-pol:ospf-conditions" type="container"><description><![CDATA[Match conditions specific to OSPF]]>None</description><node access="read-write" name="oc-ospf-pol:config" type="container"><description><![CDATA[Configuration parameters relating to OSPF match conditions]]>None</description><node access="read-write" datatype="oc-ospf-types:ospf-area-identifier" name="oc-ospf-pol:area-eq" type="leaf"><description><![CDATA[Match prefixes which are within a particular OSPF area]]>None</description></node></node><node access="read-only" name="oc-ospf-pol:state" type="container"><description><![CDATA[Operational state parameters relating to OSPF match conditions]]>None</description><node access="read-only" datatype="oc-ospf-types:ospf-area-identifier" name="oc-ospf-pol:area-eq" type="leaf"><description><![CDATA[Match prefixes which are within a particular OSPF area]]>None</description></node></node></node></node><node access="read-write" name="actions" type="container"><description><![CDATA[Top-level container for policy action statements]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data for policy actions]]>None</description><node access="read-write" mandatory="true" name="route-disposition" type="choice"><description><![CDATA[Select the final disposition for the route, either
accept or reject.]]>None</description><node access="read-write" name="accept-route" type="case"><node access="read-write" datatype="empty" name="accept-route" type="leaf"><description><![CDATA[accepts the route into the routing table]]>None</description></node></node><node access="read-write" name="reject-route" type="case"><node access="read-write" datatype="empty" name="reject-route" type="leaf"><description><![CDATA[rejects the route]]>None</description></node></node></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data for policy actions]]>None</description><node access="read-only" mandatory="true" name="route-disposition" type="choice"><description><![CDATA[Select the final disposition for the route, either
accept or reject.]]>None</description><node access="read-only" name="accept-route" type="case"><node access="read-only" datatype="empty" name="accept-route" type="leaf"><description><![CDATA[accepts the route into the routing table]]>None</description></node></node><node access="read-only" name="reject-route" type="case"><node access="read-only" datatype="empty" name="reject-route" type="leaf"><description><![CDATA[rejects the route]]>None</description></node></node></node></node><node access="read-write" name="igp-actions" type="container"><description><![CDATA[Actions to set IGP route attributes; these actions
apply to multiple IGPs]]>None</description><node access="read-write" name="config" type="container"><description><![CDATA[Configuration data ]]>None</description><node access="read-write" datatype="oc-pol-types:tag-type" name="set-tag" type="leaf"><description><![CDATA[Set the tag value for OSPF or IS-IS routes.]]>None</description></node></node><node access="read-only" name="state" type="container"><description><![CDATA[Operational state data ]]>None</description><node access="read-only" datatype="oc-pol-types:tag-type" name="set-tag" type="leaf"><description><![CDATA[Set the tag value for OSPF or IS-IS routes.]]>None</description></node></node><node access="read-write" name="oc-isis-pol:isis-actions" type="container"><description><![CDATA[Actions that can be performed by IS-IS within a policy]]>None</description><node access="read-write" name="oc-isis-pol:config" type="container"><description><![CDATA[Configuration parameters relating to IS-IS actions]]>None</description><node access="read-write" datatype="isis-types:level-number" name="oc-isis-pol:set-level" type="leaf"><description><![CDATA[Set the level that a prefix is to be imported into.]]>None</description></node><node access="read-write" datatype="isis-types:level-number" name="oc-isis-pol:set-metric-type" type="leaf"><description><![CDATA[Set the type of metric that is to be specified when the
set metric leaf is specified]]>None</description></node><node access="read-write" datatype="isis-types:wide-metric" name="oc-isis-pol:set-metric" type="leaf"><description><![CDATA[Set the metric of the IS-IS prefix]]>None</description></node></node><node access="read-only" name="oc-isis-pol:state" type="container"><description><![CDATA[Operational state associated with IS-IS actions]]>None</description><node access="read-only" datatype="isis-types:level-number" name="oc-isis-pol:set-level" type="leaf"><description><![CDATA[Set the level that a prefix is to be imported into.]]>None</description></node><node access="read-only" datatype="isis-types:level-number" name="oc-isis-pol:set-metric-type" type="leaf"><description><![CDATA[Set the type of metric that is to be specified when the
set metric leaf is specified]]>None</description></node><node access="read-only" datatype="isis-types:wide-metric" name="oc-isis-pol:set-metric" type="leaf"><description><![CDATA[Set the metric of the IS-IS prefix]]>None</description></node></node></node></node><node access="read-write" name="oc-bgp-pol:bgp-actions" type="container"><description><![CDATA[Top-level container for BGP-specific actions]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for BGP-specific actions]]>None</description><node access="read-write" datatype="oc-bgp-types:bgp-origin-attr-type" name="oc-bgp-pol:set-route-origin" type="leaf" values="IGP|EGP|INCOMPLETE"><description><![CDATA[set the origin attribute to the specified
value]]>None</description></node><node access="read-write" datatype="uint32" name="oc-bgp-pol:set-local-pref" type="leaf"><description><![CDATA[set the local pref attribute on the route
update]]>None</description></node><node access="read-write" datatype="bgp-next-hop-type" name="oc-bgp-pol:set-next-hop" type="leaf" values="SELF"><description><![CDATA[set the next-hop attribute in the route update]]>None</description></node><node access="read-write" datatype="bgp-set-med-type" name="oc-bgp-pol:set-med" type="leaf" values="IGP"><description><![CDATA[set the med metric attribute in the route
update]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for BGP-specific actions]]>None</description><node access="read-only" datatype="oc-bgp-types:bgp-origin-attr-type" name="oc-bgp-pol:set-route-origin" type="leaf" values="IGP|EGP|INCOMPLETE"><description><![CDATA[set the origin attribute to the specified
value]]>None</description></node><node access="read-only" datatype="uint32" name="oc-bgp-pol:set-local-pref" type="leaf"><description><![CDATA[set the local pref attribute on the route
update]]>None</description></node><node access="read-only" datatype="bgp-next-hop-type" name="oc-bgp-pol:set-next-hop" type="leaf" values="SELF"><description><![CDATA[set the next-hop attribute in the route update]]>None</description></node><node access="read-only" datatype="bgp-set-med-type" name="oc-bgp-pol:set-med" type="leaf" values="IGP"><description><![CDATA[set the med metric attribute in the route
update]]>None</description></node></node><node access="read-write" name="oc-bgp-pol:set-as-path-prepend" type="container"><description><![CDATA[action to prepend local AS number to the AS-path a
specified number of times]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for the AS path prepend action]]>None</description><node access="read-write" datatype="uint8" name="oc-bgp-pol:repeat-n" type="leaf"><description><![CDATA[Number of times to prepend the local AS number to the AS
path.  The value should be between 1 and the maximum
supported by the implementation.]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for the AS path prepend action]]>None</description><node access="read-only" datatype="uint8" name="oc-bgp-pol:repeat-n" type="leaf"><description><![CDATA[Number of times to prepend the local AS number to the AS
path.  The value should be between 1 and the maximum
supported by the implementation.]]>None</description></node></node></node><node access="read-write" name="oc-bgp-pol:set-community" type="container"><description><![CDATA[Action to set the community attributes of the route, along
with options to modify how the community is modified.
Communities may be set using an inline list OR
reference to an existing defined set (not both).]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for the set-community action]]>None</description><node access="read-write" datatype="enumeration" name="oc-bgp-pol:method" type="leaf" values="INLINE|REFERENCE"><description><![CDATA[Indicates the method used to specify the extended
communities for the set-ext-community action]]>None</description></node><node access="read-write" datatype="bgp-set-community-option-type" name="oc-bgp-pol:options" type="leaf" values="ADD|REMOVE|REPLACE"><description><![CDATA[Options for modifying the community attribute with
the specified values.  These options apply to both
methods of setting the community attribute.]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for the set-community action]]>None</description><node access="read-only" datatype="enumeration" name="oc-bgp-pol:method" type="leaf" values="INLINE|REFERENCE"><description><![CDATA[Indicates the method used to specify the extended
communities for the set-ext-community action]]>None</description></node><node access="read-only" datatype="bgp-set-community-option-type" name="oc-bgp-pol:options" type="leaf" values="ADD|REMOVE|REPLACE"><description><![CDATA[Options for modifying the community attribute with
the specified values.  These options apply to both
methods of setting the community attribute.]]>None</description></node></node><node access="read-write" name="oc-bgp-pol:inline" type="container"><description><![CDATA[Set the community values for the action inline with
a list.]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data or inline specification of set-community
action]]>None</description><node access="read-write" datatype="union" name="oc-bgp-pol:communities" type="leaf-list"><description><![CDATA[Set the community values for the update inline with
a list.]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data or inline specification of
set-community action]]>None</description><node access="read-only" datatype="union" name="oc-bgp-pol:communities" type="leaf-list"><description><![CDATA[Set the community values for the update inline with
a list.]]>None</description></node></node></node><node access="read-write" name="oc-bgp-pol:reference" type="container"><description><![CDATA[Provide a reference to a defined community set for the
set-community action]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for referening a community-set in the
set-community action]]>None</description><node access="read-write" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/community-sets/community-set/community-set-name" name="oc-bgp-pol:community-set-ref" type="leaf"><description><![CDATA[References a defined community set by name]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for referening a community-set
in the set-community action]]>None</description><node access="read-only" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/community-sets/community-set/community-set-name" name="oc-bgp-pol:community-set-ref" type="leaf"><description><![CDATA[References a defined community set by name]]>None</description></node></node></node></node><node access="read-write" name="oc-bgp-pol:set-ext-community" type="container"><description><![CDATA[Action to set the extended community attributes of the
route, along with options to modify how the community is
modified. Extended communities may be set using an inline
list OR a reference to an existing defined set (but not
both).]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for the set-ext-community action]]>None</description><node access="read-write" datatype="enumeration" name="oc-bgp-pol:method" type="leaf" values="INLINE|REFERENCE"><description><![CDATA[Indicates the method used to specify the extended
communities for the set-ext-community action]]>None</description></node><node access="read-write" datatype="bgp-set-community-option-type" name="oc-bgp-pol:options" type="leaf" values="ADD|REMOVE|REPLACE"><description><![CDATA[Options for modifying the community attribute with
the specified values.  These options apply to both
methods of setting the community attribute.]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for the set-ext-community action]]>None</description><node access="read-only" datatype="enumeration" name="oc-bgp-pol:method" type="leaf" values="INLINE|REFERENCE"><description><![CDATA[Indicates the method used to specify the extended
communities for the set-ext-community action]]>None</description></node><node access="read-only" datatype="bgp-set-community-option-type" name="oc-bgp-pol:options" type="leaf" values="ADD|REMOVE|REPLACE"><description><![CDATA[Options for modifying the community attribute with
the specified values.  These options apply to both
methods of setting the community attribute.]]>None</description></node></node><node access="read-write" name="oc-bgp-pol:inline" type="container"><description><![CDATA[Set the extended community values for the action inline with
a list.]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data or inline specification of
set-ext-community action]]>None</description><node access="read-write" datatype="union" name="oc-bgp-pol:communities" type="leaf-list"><description><![CDATA[Set the extended community values for the update inline
with a list.]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data or inline specification of
set-ext-community action]]>None</description><node access="read-only" datatype="union" name="oc-bgp-pol:communities" type="leaf-list"><description><![CDATA[Set the extended community values for the update inline
with a list.]]>None</description></node></node></node><node access="read-write" name="oc-bgp-pol:reference" type="container"><description><![CDATA[Provide a reference to an extended community set for the
set-ext-community action]]>None</description><node access="read-write" name="oc-bgp-pol:config" type="container"><description><![CDATA[Configuration data for referening an extended
community-set in the set-ext-community action]]>None</description><node access="read-write" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/ext-community-sets/ext-community-set/ext-community-set-name" name="oc-bgp-pol:ext-community-set-ref" type="leaf"><description><![CDATA[References a defined extended community set by
name]]>None</description></node></node><node access="read-only" name="oc-bgp-pol:state" type="container"><description><![CDATA[Operational state data for referening an extended
community-set in the set-ext-community action]]>None</description><node access="read-only" datatype="-&gt; /oc-rpol:routing-policy/defined-sets/oc-bgp-pol:bgp-defined-sets/ext-community-sets/ext-community-set/ext-community-set-name" name="oc-bgp-pol:ext-community-set-ref" type="leaf"><description><![CDATA[References a defined extended community set by
name]]>None</description></node></node></node></node></node><node access="read-write" name="oc-ospf-pol:ospf-actions" type="container"><description><![CDATA[Actions specific to OSPF]]>None</description><node access="read-write" name="oc-ospf-pol:config" type="container"><description><![CDATA[Configuration parameters for OSPF actions]]>None</description><node access="read-write" datatype="oc-ospf-types:ospf-area-identifier" name="oc-ospf-pol:set-area" type="leaf"><description><![CDATA[Set the area for the matched route. This action is typically
used when importing prefixes into OSPF, such that a route can
be imported into a specific area within the instance.]]>None</description></node></node><node access="read-only" name="oc-ospf-pol:state" type="container"><description><![CDATA[Operational state parameters for OSPF actions]]>None</description><node access="read-only" datatype="oc-ospf-types:ospf-area-identifier" name="oc-ospf-pol:set-area" type="leaf"><description><![CDATA[Set the area for the matched route. This action is typically
used when importing prefixes into OSPF, such that a route can
be imported into a specific area within the instance.]]>None</description></node></node><node access="read-write" name="oc-ospf-pol:set-metric" type="container"><description><![CDATA[Configuration and state parameters relating to manipulating
the OSPF metric]]>None</description><node access="read-write" name="oc-ospf-pol:config" type="container"><description><![CDATA[Configuration parameters relating to setting the OSPF metric]]>None</description><node access="read-write" datatype="enumeration" default="EXTERNAL_TYPE_2" name="oc-ospf-pol:metric-type" type="leaf" values="EXTERNAL_TYPE_1|EXTERNAL_TYPE_2"><description><![CDATA[Specify the type of metric which is to be set by the policy]]>None</description></node><node access="read-write" datatype="oc-ospf-types:ospf-metric" name="oc-ospf-pol:metric" type="leaf"><description><![CDATA[Set the metric of the routes matching the policy to the value
specified by this leaf.]]>None</description></node></node><node access="read-only" name="oc-ospf-pol:state" type="container"><description><![CDATA[Operational state parameters relating to setting the OSPF
metric]]>None</description><node access="read-only" datatype="enumeration" default="EXTERNAL_TYPE_2" name="oc-ospf-pol:metric-type" type="leaf" values="EXTERNAL_TYPE_1|EXTERNAL_TYPE_2"><description><![CDATA[Specify the type of metric which is to be set by the policy]]>None</description></node><node access="read-only" datatype="oc-ospf-types:ospf-metric" name="oc-ospf-pol:metric" type="leaf"><description><![CDATA[Set the metric of the routes matching the policy to the value
specified by this leaf.]]>None</description></node></node></node></node></node></node></node></node></node></node></node>