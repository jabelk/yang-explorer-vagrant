<node name="ietf-network-state" prefix="nw-s" type="module"><namespace import="false" module="ietf-network-topology" prefix="nt">urn:ietf:params:xml:ns:yang:ietf-network-topology</namespace><namespace import="false" module="ietf-dc-fabric-topology-state" prefix="sfabric">urn:ietf:params:xml:ns:yang:ietf-dc-fabric-topology-state</namespace><namespace import="false" module="ietf-network-state" prefix="nw-s">urn:ietf:params:xml:ns:yang:ietf-network-state</namespace><namespace import="false" module="ietf-inet-types" prefix="inet">urn:ietf:params:xml:ns:yang:ietf-inet-types</namespace><namespace import="false" module="ietf-dc-fabric-types" prefix="fabrictypes">urn:ietf:params:xml:ns:yang:ietf-dc-fabric-types</namespace><namespace import="false" module="ietf-routing-types" prefix="rt-types">urn:ietf:params:xml:ns:yang:ietf-routing-types</namespace><namespace import="false" module="ietf-l3-unicast-topology" prefix="l3t">urn:ietf:params:xml:ns:yang:ietf-l3-unicast-topology</namespace><namespace import="false" module="ietf-network-topology-state" prefix="nt-s">urn:ietf:params:xml:ns:yang:ietf-network-topology-state</namespace><namespace import="false" module="ietf-l3-unicast-topology-state" prefix="l3t-s">urn:ietf:params:xml:ns:yang:ietf-l3-unicast-topology-state</namespace><namespace import="false" module="ietf-yang-types" prefix="yang">urn:ietf:params:xml:ns:yang:ietf-yang-types</namespace><namespace import="true" module="ietf-network" prefix="nw">urn:ietf:params:xml:ns:yang:ietf-network</namespace><node access="read-only" name="networks" type="container"><description><![CDATA[Serves as a top-level container for a list of networks.]]>None</description><node access="read-only" key="network-id" name="network" type="list"><description><![CDATA[Describes a network.
A network typically contains an inventory of nodes,
topological information (augmented through the
network-topology data model), and layering information.]]>None</description><node access="read-only" name="network-types" type="container"><description><![CDATA[Serves as an augmentation target.
The network type is indicated through corresponding
presence containers augmented into this container.]]>None</description><node access="read-only" name="l3t-s:l3-unicast-topology" presence="true" type="container"><description><![CDATA[The presence of the container node indicates L3 Unicast
topology]]>None</description></node><node access="read-only" name="sfabric:fabric-network" presence="true" type="container"><description><![CDATA[The presence of the container node indicates
fabric topology]]>None</description></node></node><node access="read-only" datatype="nw:network-id" is_key="true" mandatory="true" name="network-id" type="leaf"><description><![CDATA[Identifies a network.]]>None</description></node><node access="read-only" key="network-ref" name="supporting-network" type="list"><description><![CDATA[An underlay network, used to represent layered network
topologies.]]>None</description><node access="read-only" datatype="-&gt; /networks/network/network-id" is_key="true" mandatory="true" name="network-ref" type="leaf"><description><![CDATA[References the underlay network.]]>None</description></node></node><node access="read-only" key="node-id" name="node" type="list"><description><![CDATA[The inventory of nodes of this network.]]>None</description><node access="read-only" datatype="nw:node-id" is_key="true" mandatory="true" name="node-id" type="leaf"><description><![CDATA[Uniquely identifies a node within the containing
network.]]>None</description></node><node access="read-only" key="network-ref node-ref" name="supporting-node" type="list"><description><![CDATA[Represents another node that is in an underlay network
and that supports this node.  Used to represent layering
structure.]]>None</description><node access="read-only" datatype="-&gt; ../../../supporting-network/network-ref" is_key="true" mandatory="true" name="network-ref" type="leaf"><description><![CDATA[References the underlay network of which the
underlay node is a part.]]>None</description></node><node access="read-only" datatype="-&gt; /networks/network/node/node-id" is_key="true" mandatory="true" name="node-ref" type="leaf"><description><![CDATA[References the underlay node itself.]]>None</description></node></node><node access="read-only" key="tp-id" name="nt-s:termination-point" type="list"><description><![CDATA[A termination point can terminate a link.
Depending on the type of topology, a termination point
could, for example, refer to a port or an interface.]]>None</description><node access="read-only" datatype="nt:tp-id" is_key="true" mandatory="true" name="nt-s:tp-id" type="leaf"><description><![CDATA[Termination point identifier.]]>None</description></node><node access="read-only" key="network-ref node-ref tp-ref" name="nt-s:supporting-termination-point" type="list"><description><![CDATA[This list identifies any termination points on which a
given termination point depends or onto which it maps.
Those termination points will themselves be contained
in a supporting node.  This dependency information can be
inferred from the dependencies between links.  Therefore,
this item is not separately configurable.  Hence, no
corresponding constraint needs to be articulated.
The corresponding information is simply provided by the
implementing system.]]>None</description><node access="read-only" datatype="-&gt; ../../../nw-s:supporting-node/network-ref" is_key="true" mandatory="true" name="nt-s:network-ref" type="leaf"><description><![CDATA[This leaf identifies in which topology the
supporting termination point is present.]]>None</description></node><node access="read-only" datatype="-&gt; ../../../nw-s:supporting-node/node-ref" is_key="true" mandatory="true" name="nt-s:node-ref" type="leaf"><description><![CDATA[This leaf identifies in which node the supporting
termination point is present.]]>None</description></node><node access="read-only" datatype="-&gt; /nw-s:networks/network[nw-s:network-id=current()/../network-ref]/node[nw-s:node-id=current()/../node-ref]/termination-point/tp-id" is_key="true" mandatory="true" name="nt-s:tp-ref" type="leaf"><description><![CDATA[Reference to the underlay node (the underlay node must
be in a different topology).]]>None</description></node></node><node access="read-only" name="l3t-s:l3-termination-point-attributes" type="container"><description><![CDATA[Contains termination point attributes]]>None</description><node access="read-only" mandatory="true" name="l3t-s:termination-point-type" type="choice" values="ip|unnumbered|interface-name"><description><![CDATA[Indicates the termination point type]]>None</description><node access="read-only" name="l3t-s:ip" type="case"><node access="read-only" datatype="inet:ip-address" name="l3t-s:ip-address" type="leaf-list"><description><![CDATA[IPv4 or IPv6 address.]]>None</description></node></node><node access="read-only" name="l3t-s:unnumbered" type="case"><node access="read-only" datatype="uint32" name="l3t-s:unnumbered-id" type="leaf"><description><![CDATA[Unnumbered interface identifier.
The identifier will correspond to the ifIndex value
of the interface, i.e., the ifIndex value of the
ifEntry that represents the interface in
implementations where the Interfaces Group MIB
(RFC 2863) is supported.]]>None</description></node></node><node access="read-only" name="l3t-s:interface-name" type="case"><node access="read-only" datatype="string" name="l3t-s:interface-name" type="leaf"><description><![CDATA[Name of the interface.  The name can (but does not
have to) correspond to an interface reference of a
containing node's interface, i.e., the path name of a
corresponding interface data node on the containing
node reminiscent of data type interface-ref defined
in RFC 8343. It should be noted that data type
interface-ref of RFC 8343 cannot be used directly,

as this data type is used to reference an interface
in a datastore of a single node in the network, not
to uniquely reference interfaces across a network.]]>None</description></node></node></node></node></node><node access="read-only" name="l3t-s:l3-node-attributes" type="container"><description><![CDATA[Contains node attributes]]>None</description><node access="read-only" datatype="inet:domain-name" name="l3t-s:name" type="leaf"><description><![CDATA[Node name]]>None</description></node><node access="read-only" datatype="node-flag-type" name="l3t-s:flag" type="leaf-list"><description><![CDATA[Node flags]]>None</description></node><node access="read-only" datatype="rt-types:router-id" name="l3t-s:router-id" type="leaf-list"><description><![CDATA[Router-id for the node]]>None</description></node><node access="read-only" key="prefix" name="l3t-s:prefix" type="list"><description><![CDATA[A list of prefixes along with their attributes]]>None</description><node access="read-only" datatype="inet:ip-prefix" is_key="true" mandatory="true" name="l3t-s:prefix" type="leaf"><description><![CDATA[IP prefix value]]>None</description></node><node access="read-only" datatype="uint32" name="l3t-s:metric" type="leaf"><description><![CDATA[Prefix metric]]>None</description></node><node access="read-only" datatype="prefix-flag-type" name="l3t-s:flag" type="leaf-list"><description><![CDATA[Prefix flags]]>None</description></node></node></node><node access="read-only" name="sfabric:fabric-attributes-state" type="container"><description><![CDATA[Attributes for a fabric network]]>None</description><node access="read-only" datatype="fabrictypes:fabric-id" name="sfabric:fabric-id" type="leaf"><description><![CDATA[Fabric ID]]>None</description></node><node access="read-only" datatype="string" name="sfabric:name" type="leaf"><description><![CDATA[Name of the fabric]]>None</description></node><node access="read-only" datatype="fabrictypes:underlay-network-type" name="sfabric:type" type="leaf"><description><![CDATA[The type of physical network that implements this
fabric.  Examples are VLAN and TRILL.]]>None</description></node><node access="read-only" name="sfabric:vni-capacity" type="container"><description><![CDATA[The range of the VXLAN Network
Identifier (VNI) defined in RFC 7348 that the POD uses.]]>None</description><node access="read-only" datatype="int32" name="sfabric:min" type="leaf"><description><![CDATA[The lower-limit VNI.]]>None</description></node><node access="read-only" datatype="int32" name="sfabric:max" type="leaf"><description><![CDATA[The upper-limit VNI.]]>None</description></node></node><node access="read-only" datatype="string" name="sfabric:description" type="leaf"><description><![CDATA[Description of the fabric]]>None</description></node><node access="read-only" name="sfabric:options" type="container"><description><![CDATA[Options of the fabric]]>None</description><node access="read-only" datatype="enumeration" default="distributed" name="sfabric:gateway-mode" type="leaf" values="centralized|distributed"><description><![CDATA[Gateway mode of the fabric]]>None</description></node><node access="read-only" datatype="enumeration" default="normal" name="sfabric:traffic-behavior" type="leaf" values="normal|policy-driven"><description><![CDATA[Traffic behavior of the fabric]]>None</description></node><node access="read-only" datatype="fabrictypes:service-capabilities" name="sfabric:capability-supported" type="leaf-list"><description><![CDATA[It provides a list of supported services of the
fabric.  The service-capabilities is defined as
identity-ref.  Users can define more services
by defining new identities.]]>None</description></node></node><node access="read-only" key="device-ref" name="sfabric:device-nodes" type="list"><description><![CDATA[Device nodes that are included in a fabric.]]>None</description><node access="read-only" datatype="fabrictypes:node-ref" is_key="true" mandatory="true" name="sfabric:device-ref" type="leaf"><description><![CDATA[The device that the fabric includes that refers
to a node in another topology.]]>None</description></node><node access="read-only" datatype="fabrictypes:device-role" default="fabrictypes:leaf" name="sfabric:role" type="leaf-list"><description><![CDATA[It is a list of device roles to represent the roles
that a device plays within a POD, such as SPINE,
LEAF, Border, or Border-Leaf.
The device role is defined as identity-ref.  If more
than 2 stages are used for a POD, users can
define new identities for the device role.]]>None</description></node></node><node access="read-only" key="link-ref" name="sfabric:device-links" type="list"><description><![CDATA[Links that are included within a fabric.]]>None</description><node access="read-only" datatype="fabrictypes:link-ref" is_key="true" mandatory="true" name="sfabric:link-ref" type="leaf"><description><![CDATA[The link that the fabric includes that refers to
a link in another topology.]]>None</description></node></node><node access="read-only" key="port-ref" name="sfabric:device-ports" type="list"><description><![CDATA[Ports that are included in the fabric.]]>None</description><node access="read-only" datatype="fabrictypes:tp-ref" is_key="true" mandatory="true" name="sfabric:port-ref" type="leaf"><description><![CDATA[The port that the fabric includes that refers to
a termination-point in another topology.]]>None</description></node><node access="read-only" datatype="fabrictypes:port-type" name="sfabric:port-type" type="leaf"><description><![CDATA[Port type is defined as identity-ref.  The current
types include ethernet or serial.  If more types
are needed, developers can define new identities.]]>None</description></node><node access="read-only" datatype="fabrictypes:bandwidth" name="sfabric:bandwidth" type="leaf"><description><![CDATA[Bandwidth of the port.  It is defined as
identity-ref.  If more speeds are introduced,
developers can define new identities for them.  Current
speeds include 1M, 10M, 100M, 1G, 10G,
25G, 40G, 100G, and 400G.]]>None</description></node></node></node></node><node access="read-only" key="link-id" name="nt-s:link" type="list"><description><![CDATA[A network link connects a local (source) node and
a remote (destination) node via a set of the respective
node's termination points.  It is possible to have several
links between the same source and destination nodes.
Likewise, a link could potentially be re-homed between
termination points.  Therefore, in order to ensure that we
would always know to distinguish between links, every link
is identified by a dedicated link identifier.  Note that a
link models a point-to-point link, not a multipoint link.]]>None</description><node access="read-only" name="nt-s:source" type="container"><description><![CDATA[This container holds the logical source of a particular
link.]]>None</description><node access="read-only" datatype="-&gt; ../../../nw-s:node/node-id" name="nt-s:source-node" type="leaf"><description><![CDATA[Source node identifier.  Must be in the same topology.]]>None</description></node><node access="read-only" datatype="-&gt; ../../../nw-s:node[nw-s:node-id=current()/../source-node]/termination-point/tp-id" name="nt-s:source-tp" type="leaf"><description><![CDATA[This termination point is located within the source node
and terminates the link.]]>None</description></node></node><node access="read-only" name="nt-s:destination" type="container"><description><![CDATA[This container holds the logical destination of a
particular link.]]>None</description><node access="read-only" datatype="-&gt; ../../../nw-s:node/node-id" name="nt-s:dest-node" type="leaf"><description><![CDATA[Destination node identifier.  Must be in the same
network.]]>None</description></node><node access="read-only" datatype="-&gt; ../../../nw-s:node[nw-s:node-id=current()/../dest-node]/termination-point/tp-id" name="nt-s:dest-tp" type="leaf"><description><![CDATA[This termination point is located within the
destination node and terminates the link.]]>None</description></node></node><node access="read-only" datatype="nt:link-id" is_key="true" mandatory="true" name="nt-s:link-id" type="leaf"><description><![CDATA[The identifier of a link in the topology.
A link is specific to a topology to which it belongs.]]>None</description></node><node access="read-only" key="network-ref link-ref" name="nt-s:supporting-link" type="list"><description><![CDATA[Identifies the link or links on which this link depends.]]>None</description><node access="read-only" datatype="-&gt; ../../../nw-s:supporting-network/network-ref" is_key="true" mandatory="true" name="nt-s:network-ref" type="leaf"><description><![CDATA[This leaf identifies in which underlay topology
the supporting link is present.]]>None</description></node><node access="read-only" datatype="-&gt; /nw-s:networks/network[nw-s:network-id=current()/../network-ref]/link/link-id" is_key="true" mandatory="true" name="nt-s:link-ref" type="leaf"><description><![CDATA[This leaf identifies a link that is a part
of this link's underlay.  Reference loops in which
a link identifies itself as its underlay, either
directly or transitively, are not allowed.]]>None</description></node></node><node access="read-only" name="l3t-s:l3-link-attributes" type="container"><description><![CDATA[Contains link attributes]]>None</description><node access="read-only" datatype="string" name="l3t-s:name" type="leaf"><description><![CDATA[Link Name]]>None</description></node><node access="read-only" datatype="link-flag-type" name="l3t-s:flag" type="leaf-list"><description><![CDATA[Link flags]]>None</description></node><node access="read-only" datatype="uint64" name="l3t-s:metric1" type="leaf"><description><![CDATA[Link Metric 1]]>None</description></node><node access="read-only" datatype="uint64" name="l3t-s:metric2" type="leaf"><description><![CDATA[Link Metric 2]]>None</description></node></node></node><node access="read-only" name="l3t-s:l3-topology-attributes" type="container"><description><![CDATA[Contains topology attributes]]>None</description><node access="read-only" datatype="string" name="l3t-s:name" type="leaf"><description><![CDATA[Name of the topology]]>None</description></node><node access="read-only" datatype="l3-flag-type" name="l3t-s:flag" type="leaf-list"><description><![CDATA[Topology flags]]>None</description></node></node></node></node></node>